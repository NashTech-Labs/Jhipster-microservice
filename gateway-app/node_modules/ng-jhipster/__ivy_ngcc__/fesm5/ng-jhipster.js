import { __decorate, __assign, __param, __values, __extends, __spread } from 'tslib';
import { ɵɵdefineInjectable, Injectable, ɵɵinject, Input, Component, Directive, forwardRef, EventEmitter, Output, Host, ContentChild, HostListener, ElementRef, Optional, Pipe, NgModule, SecurityContext } from '@angular/core';
import { faSort, faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';
import { NG_VALIDATORS, FormsModule } from '@angular/forms';
import { FaIconComponent } from '@fortawesome/angular-fontawesome';
import { TranslateService } from '@ngx-translate/core';
import { Subject, Observable } from 'rxjs';
import { takeUntil, share, filter, map } from 'rxjs/operators';
import { CommonModule, DatePipe } from '@angular/common';
import { NgbActiveModal, NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { TranslateHttpLoader } from '@ngx-translate/http-loader';
import { DomSanitizer } from '@angular/platform-browser';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@ngx-translate/core';
import * as ɵngcc3 from '@ng-bootstrap/ng-bootstrap';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from '@angular/platform-browser';

function JhiItemCountComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵtext(1, "\n            /* [attr.translateValues] is used to get entire values in tests */\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("translateValues", ctx_r0.i18nValues());
} }
function JhiItemCountComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵtextInterpolate3("\n            Showing\n            ", (ctx_r2.page - 1) * ctx_r2.itemsPerPage == 0 ? 1 : (ctx_r2.page - 1) * ctx_r2.itemsPerPage + 1, "\n            - ", ctx_r2.page * ctx_r2.itemsPerPage < ctx_r2.total ? ctx_r2.page * ctx_r2.itemsPerPage : ctx_r2.total, " of ", ctx_r2.total, " items.\n        ");
} }
function JhiThreadModalComponent_div_45_div_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵtext(1, "\n                            ");
    ɵngcc0.ɵɵelementStart(2, "samp");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementStart(4, "code");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, ")");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n                            ");
    ɵngcc0.ɵɵelement(8, "span", 31);
    ɵngcc0.ɵɵtext(9, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var st_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2("", st_r3.value.className, ".", st_r3.value.methodName, "(");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2("", st_r3.value.fileName, ":", st_r3.value.lineNumber, "");
} }
function JhiThreadModalComponent_div_45_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵtext(1, "\n                ");
    ɵngcc0.ɵɵelementStart(2, "h6");
    ɵngcc0.ɵɵtext(3, "\n                    ");
    ɵngcc0.ɵɵelementStart(4, "span", 16);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementStart(7, "a", 17);
    ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_div_45_Template_a_click_7_listener() { var entry_r1 = ctx.$implicit; return entry_r1.show = !entry_r1.show; });
    ɵngcc0.ɵɵtext(8, "\n                        ");
    ɵngcc0.ɵɵelementStart(9, "span", 18);
    ɵngcc0.ɵɵtext(10, "Show StackTrace");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(11, "\n                        ");
    ɵngcc0.ɵɵelementStart(12, "span", 19);
    ɵngcc0.ɵɵtext(13, "Hide StackTrace");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(14, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(15, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(16, "\n                ");
    ɵngcc0.ɵɵelementStart(17, "div", 20);
    ɵngcc0.ɵɵtext(18, "\n                    ");
    ɵngcc0.ɵɵelementStart(19, "div", 21);
    ɵngcc0.ɵɵtext(20, "\n                        ");
    ɵngcc0.ɵɵtemplate(21, JhiThreadModalComponent_div_45_div_21_Template, 10, 4, "div", 22);
    ɵngcc0.ɵɵpipe(22, "keys");
    ɵngcc0.ɵɵtext(23, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(24, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(25, "\n                ");
    ɵngcc0.ɵɵelementStart(26, "table", 23);
    ɵngcc0.ɵɵtext(27, "\n                    ");
    ɵngcc0.ɵɵelementStart(28, "thead");
    ɵngcc0.ɵɵtext(29, "\n                        ");
    ɵngcc0.ɵɵelementStart(30, "tr");
    ɵngcc0.ɵɵtext(31, "\n                            ");
    ɵngcc0.ɵɵelementStart(32, "th", 24);
    ɵngcc0.ɵɵtext(33, "Blocked Time");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(34, "\n                            ");
    ɵngcc0.ɵɵelementStart(35, "th", 25);
    ɵngcc0.ɵɵtext(36, "Blocked Count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(37, "\n                            ");
    ɵngcc0.ɵɵelementStart(38, "th", 26);
    ɵngcc0.ɵɵtext(39, "Waited Time");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(40, "\n                            ");
    ɵngcc0.ɵɵelementStart(41, "th", 27);
    ɵngcc0.ɵɵtext(42, "Waited Count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(43, "\n                            ");
    ɵngcc0.ɵɵelementStart(44, "th", 28);
    ɵngcc0.ɵɵtext(45, "Lock Name");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(46, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(47, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(48, "\n                    ");
    ɵngcc0.ɵɵelementStart(49, "tbody");
    ɵngcc0.ɵɵtext(50, "\n                        ");
    ɵngcc0.ɵɵelementStart(51, "tr");
    ɵngcc0.ɵɵtext(52, "\n                            ");
    ɵngcc0.ɵɵelementStart(53, "td");
    ɵngcc0.ɵɵtext(54);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(55, "\n                            ");
    ɵngcc0.ɵɵelementStart(56, "td");
    ɵngcc0.ɵɵtext(57);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(58, "\n                            ");
    ɵngcc0.ɵɵelementStart(59, "td");
    ɵngcc0.ɵɵtext(60);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(61, "\n                            ");
    ɵngcc0.ɵɵelementStart(62, "td");
    ɵngcc0.ɵɵtext(63);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(64, "\n                            ");
    ɵngcc0.ɵɵelementStart(65, "td", 29);
    ɵngcc0.ɵɵtext(66, "\n                                ");
    ɵngcc0.ɵɵelementStart(67, "code");
    ɵngcc0.ɵɵtext(68);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(69, "\n                            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(70, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(71, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(72, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(73, "\n            ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getBadgeClass(entry_r1.value.threadState));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(entry_r1.value.threadState);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2("\u00A0", entry_r1.value.threadName, "\n                    (ID\n                    ", entry_r1.value.threadId, ")\n                    ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("hidden", entry_r1.show);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("hidden", !entry_r1.show);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("hidden", !entry_r1.show);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(22, 14, entry_r1.value.stackTrace));
    ɵngcc0.ɵɵadvance(33);
    ɵngcc0.ɵɵtextInterpolate(entry_r1.value.blockedTime);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r1.value.blockedCount);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r1.value.waitedTime);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r1.value.waitedCount);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", entry_r1.value.lockName);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r1.value.lockName);
} }
function JhiJvmMemoryComponent_div_4_div_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "number");
    ɵngcc0.ɵɵpipe(6, "number");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" (", ɵngcc0.ɵɵpipeBind2(5, 3, entry_r2.value.used / 1048576, "1.0-0"), "M /\n                    ", ɵngcc0.ɵɵpipeBind2(6, 6, entry_r2.value.max / 1048576, "1.0-0"), "M)\n                ");
} }
function JhiJvmMemoryComponent_div_4_div_2_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(5, "\n                ");
} if (rf & 2) {
    var entry_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(4, 2, entry_r2.value.used / 1048576, "1.0-0"), "M");
} }
function JhiJvmMemoryComponent_div_4_div_2_ngb_progressbar_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ngb-progressbar", 6);
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(5, "\n                ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("value", 100 * entry_r2.value.used / entry_r2.value.max)("striped", true)("animated", false);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(4, 4, entry_r2.value.used * 100 / entry_r2.value.max, "1.0-0"), "%");
} }
function JhiJvmMemoryComponent_div_4_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n                ");
    ɵngcc0.ɵɵtemplate(2, JhiJvmMemoryComponent_div_4_div_2_span_2_Template, 7, 9, "span", 3);
    ɵngcc0.ɵɵtext(3, "\n                ");
    ɵngcc0.ɵɵelementStart(4, "div");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n                ");
    ɵngcc0.ɵɵtemplate(8, JhiJvmMemoryComponent_div_4_div_2_ng_template_8_Template, 6, 5, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtext(10, "\n                ");
    ɵngcc0.ɵɵtemplate(11, JhiJvmMemoryComponent_div_4_div_2_ngb_progressbar_11_Template, 6, 7, "ngb-progressbar", 5);
    ɵngcc0.ɵɵtext(12, "\n            ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r2 = ctx.$implicit;
    var _r4 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", entry_r2.value.max != 0 - 1)("ngIfElse", _r4);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("Committed : ", ɵngcc0.ɵɵpipeBind2(6, 4, entry_r2.value.committed / 1048576, "1.0-0"), "M");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngIf", entry_r2.value.max != 0 - 1);
} }
function JhiJvmMemoryComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵtemplate(2, JhiJvmMemoryComponent_div_4_div_2_Template, 13, 7, "div", 2);
    ɵngcc0.ɵɵpipe(3, "keys");
    ɵngcc0.ɵɵtext(4, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r0.jvmMemoryMetrics));
} }
function JhiMetricsCacheComponent_div_4_tr_39_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtext(1, "\n                        ");
    ɵngcc0.ɵɵelementStart(2, "td");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n                        ");
    ɵngcc0.ɵɵelementStart(5, "td", 14);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n                        ");
    ɵngcc0.ɵɵelementStart(8, "td", 14);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(10, "\n                        ");
    ɵngcc0.ɵɵelementStart(11, "td", 14);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                        ");
    ɵngcc0.ɵɵelementStart(14, "td", 14);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(16, "\n                        ");
    ɵngcc0.ɵɵelementStart(17, "td", 14);
    ɵngcc0.ɵɵtext(18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(19, "\n                        ");
    ɵngcc0.ɵɵelementStart(20, "td", 14);
    ɵngcc0.ɵɵtext(21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(22, "\n                        ");
    ɵngcc0.ɵɵelementStart(23, "td", 14);
    ɵngcc0.ɵɵtext(24);
    ɵngcc0.ɵɵpipe(25, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(26, "\n                        ");
    ɵngcc0.ɵɵelementStart(27, "td", 14);
    ɵngcc0.ɵɵtext(28);
    ɵngcc0.ɵɵpipe(29, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(30, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r2 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.key);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value["cache.gets.hit"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value["cache.gets.miss"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value["cache.gets.hit"] + entry_r2.value["cache.gets.miss"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value["cache.puts"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value["cache.removals"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value["cache.evictions"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("\n                            ", ɵngcc0.ɵɵpipeBind2(25, 9, ctx_r1.filterNaN(100 * entry_r2.value["cache.gets.hit"] / (entry_r2.value["cache.gets.hit"] + entry_r2.value["cache.gets.miss"])), "1.0-4"), "\n                        ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1("\n                            ", ɵngcc0.ɵɵpipeBind2(29, 12, ctx_r1.filterNaN(100 * entry_r2.value["cache.gets.miss"] / (entry_r2.value["cache.gets.hit"] + entry_r2.value["cache.gets.miss"])), "1.0-4"), "\n                        ");
} }
function JhiMetricsCacheComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "table", 3);
    ɵngcc0.ɵɵtext(3, "\n                ");
    ɵngcc0.ɵɵelementStart(4, "thead");
    ɵngcc0.ɵɵtext(5, "\n                    ");
    ɵngcc0.ɵɵelementStart(6, "tr");
    ɵngcc0.ɵɵtext(7, "\n                        ");
    ɵngcc0.ɵɵelementStart(8, "th", 4);
    ɵngcc0.ɵɵtext(9, "Cache name");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(10, "\n                        ");
    ɵngcc0.ɵɵelementStart(11, "th", 5);
    ɵngcc0.ɵɵtext(12, "Cache Hits");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                        ");
    ɵngcc0.ɵɵelementStart(14, "th", 6);
    ɵngcc0.ɵɵtext(15, "Cache Misses");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(16, "\n                        ");
    ɵngcc0.ɵɵelementStart(17, "th", 7);
    ɵngcc0.ɵɵtext(18, "Cache Gets");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(19, "\n                        ");
    ɵngcc0.ɵɵelementStart(20, "th", 8);
    ɵngcc0.ɵɵtext(21, "Cache Puts");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(22, "\n                        ");
    ɵngcc0.ɵɵelementStart(23, "th", 9);
    ɵngcc0.ɵɵtext(24, "Cache Removals");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(25, "\n                        ");
    ɵngcc0.ɵɵelementStart(26, "th", 10);
    ɵngcc0.ɵɵtext(27, "Cache Evictions");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(28, "\n                        ");
    ɵngcc0.ɵɵelementStart(29, "th", 11);
    ɵngcc0.ɵɵtext(30, "Cache Hit %");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(31, "\n                        ");
    ɵngcc0.ɵɵelementStart(32, "th", 12);
    ɵngcc0.ɵɵtext(33, "Cache Miss %");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(34, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(35, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(36, "\n                ");
    ɵngcc0.ɵɵelementStart(37, "tbody");
    ɵngcc0.ɵɵtext(38, "\n                    ");
    ɵngcc0.ɵɵtemplate(39, JhiMetricsCacheComponent_div_4_tr_39_Template, 31, 15, "tr", 13);
    ɵngcc0.ɵɵpipe(40, "keys");
    ɵngcc0.ɵɵtext(41, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(42, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(43, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(39);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(40, 1, ctx_r0.cacheMetrics));
} }
function JhiMetricsDatasourceComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "table", 3);
    ɵngcc0.ɵɵtext(3, "\n                ");
    ɵngcc0.ɵɵelementStart(4, "thead");
    ɵngcc0.ɵɵtext(5, "\n                    ");
    ɵngcc0.ɵɵelementStart(6, "tr");
    ɵngcc0.ɵɵtext(7, "\n                        ");
    ɵngcc0.ɵɵelementStart(8, "th");
    ɵngcc0.ɵɵtext(9, "\n                            ");
    ɵngcc0.ɵɵelementStart(10, "span", 4);
    ɵngcc0.ɵɵtext(11, "Connection Pool Usage");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                        ");
    ɵngcc0.ɵɵelementStart(14, "th", 5);
    ɵngcc0.ɵɵtext(15, "Count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(16, "\n                        ");
    ɵngcc0.ɵɵelementStart(17, "th", 6);
    ɵngcc0.ɵɵtext(18, "Mean");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(19, "\n                        ");
    ɵngcc0.ɵɵelementStart(20, "th", 7);
    ɵngcc0.ɵɵtext(21, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(22, "\n                        ");
    ɵngcc0.ɵɵelementStart(23, "th", 8);
    ɵngcc0.ɵɵtext(24, "p50");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(25, "\n                        ");
    ɵngcc0.ɵɵelementStart(26, "th", 9);
    ɵngcc0.ɵɵtext(27, "p75");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(28, "\n                        ");
    ɵngcc0.ɵɵelementStart(29, "th", 10);
    ɵngcc0.ɵɵtext(30, "p95");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(31, "\n                        ");
    ɵngcc0.ɵɵelementStart(32, "th", 11);
    ɵngcc0.ɵɵtext(33, "p99");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(34, "\n                        ");
    ɵngcc0.ɵɵelementStart(35, "th", 12);
    ɵngcc0.ɵɵtext(36, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(37, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(38, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(39, "\n                ");
    ɵngcc0.ɵɵelementStart(40, "tbody");
    ɵngcc0.ɵɵtext(41, "\n                    ");
    ɵngcc0.ɵɵelementStart(42, "tr");
    ɵngcc0.ɵɵtext(43, "\n                        ");
    ɵngcc0.ɵɵelementStart(44, "td");
    ɵngcc0.ɵɵtext(45, "Acquire");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(46, "\n                        ");
    ɵngcc0.ɵɵelementStart(47, "td", 13);
    ɵngcc0.ɵɵtext(48);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(49, "\n                        ");
    ɵngcc0.ɵɵelementStart(50, "td", 13);
    ɵngcc0.ɵɵtext(51);
    ɵngcc0.ɵɵpipe(52, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(53, "\n                        ");
    ɵngcc0.ɵɵelementStart(54, "td", 13);
    ɵngcc0.ɵɵtext(55);
    ɵngcc0.ɵɵpipe(56, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(57, "\n                        ");
    ɵngcc0.ɵɵelementStart(58, "td", 13);
    ɵngcc0.ɵɵtext(59);
    ɵngcc0.ɵɵpipe(60, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(61, "\n                        ");
    ɵngcc0.ɵɵelementStart(62, "td", 13);
    ɵngcc0.ɵɵtext(63);
    ɵngcc0.ɵɵpipe(64, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(65, "\n                        ");
    ɵngcc0.ɵɵelementStart(66, "td", 13);
    ɵngcc0.ɵɵtext(67);
    ɵngcc0.ɵɵpipe(68, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(69, "\n                        ");
    ɵngcc0.ɵɵelementStart(70, "td", 13);
    ɵngcc0.ɵɵtext(71);
    ɵngcc0.ɵɵpipe(72, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(73, "\n                        ");
    ɵngcc0.ɵɵelementStart(74, "td", 13);
    ɵngcc0.ɵɵtext(75);
    ɵngcc0.ɵɵpipe(76, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(77, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(78, "\n                    ");
    ɵngcc0.ɵɵelementStart(79, "tr");
    ɵngcc0.ɵɵtext(80, "\n                        ");
    ɵngcc0.ɵɵelementStart(81, "td");
    ɵngcc0.ɵɵtext(82, "Creation");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(83, "\n                        ");
    ɵngcc0.ɵɵelementStart(84, "td", 13);
    ɵngcc0.ɵɵtext(85);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(86, "\n                        ");
    ɵngcc0.ɵɵelementStart(87, "td", 13);
    ɵngcc0.ɵɵtext(88);
    ɵngcc0.ɵɵpipe(89, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(90, "\n                        ");
    ɵngcc0.ɵɵelementStart(91, "td", 13);
    ɵngcc0.ɵɵtext(92);
    ɵngcc0.ɵɵpipe(93, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(94, "\n                        ");
    ɵngcc0.ɵɵelementStart(95, "td", 13);
    ɵngcc0.ɵɵtext(96);
    ɵngcc0.ɵɵpipe(97, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(98, "\n                        ");
    ɵngcc0.ɵɵelementStart(99, "td", 13);
    ɵngcc0.ɵɵtext(100);
    ɵngcc0.ɵɵpipe(101, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(102, "\n                        ");
    ɵngcc0.ɵɵelementStart(103, "td", 13);
    ɵngcc0.ɵɵtext(104);
    ɵngcc0.ɵɵpipe(105, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(106, "\n                        ");
    ɵngcc0.ɵɵelementStart(107, "td", 13);
    ɵngcc0.ɵɵtext(108);
    ɵngcc0.ɵɵpipe(109, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(110, "\n                        ");
    ɵngcc0.ɵɵelementStart(111, "td", 13);
    ɵngcc0.ɵɵtext(112);
    ɵngcc0.ɵɵpipe(113, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(114, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(115, "\n                    ");
    ɵngcc0.ɵɵelementStart(116, "tr");
    ɵngcc0.ɵɵtext(117, "\n                        ");
    ɵngcc0.ɵɵelementStart(118, "td");
    ɵngcc0.ɵɵtext(119, "Usage");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(120, "\n                        ");
    ɵngcc0.ɵɵelementStart(121, "td", 13);
    ɵngcc0.ɵɵtext(122);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(123, "\n                        ");
    ɵngcc0.ɵɵelementStart(124, "td", 13);
    ɵngcc0.ɵɵtext(125);
    ɵngcc0.ɵɵpipe(126, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(127, "\n                        ");
    ɵngcc0.ɵɵelementStart(128, "td", 13);
    ɵngcc0.ɵɵtext(129);
    ɵngcc0.ɵɵpipe(130, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(131, "\n                        ");
    ɵngcc0.ɵɵelementStart(132, "td", 13);
    ɵngcc0.ɵɵtext(133);
    ɵngcc0.ɵɵpipe(134, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(135, "\n                        ");
    ɵngcc0.ɵɵelementStart(136, "td", 13);
    ɵngcc0.ɵɵtext(137);
    ɵngcc0.ɵɵpipe(138, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(139, "\n                        ");
    ɵngcc0.ɵɵelementStart(140, "td", 13);
    ɵngcc0.ɵɵtext(141);
    ɵngcc0.ɵɵpipe(142, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(143, "\n                        ");
    ɵngcc0.ɵɵelementStart(144, "td", 13);
    ɵngcc0.ɵɵtext(145);
    ɵngcc0.ɵɵpipe(146, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(147, "\n                        ");
    ɵngcc0.ɵɵelementStart(148, "td", 13);
    ɵngcc0.ɵɵtext(149);
    ɵngcc0.ɵɵpipe(150, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(151, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(152, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(153, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(154, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(12);
    ɵngcc0.ɵɵtextInterpolate4(" (active:\n                            ", ctx_r0.datasourceMetrics.active.value, ", min: ", ctx_r0.datasourceMetrics.min.value, ", max:\n                            ", ctx_r0.datasourceMetrics.max.value, ", idle: ", ctx_r0.datasourceMetrics.idle.value, ")\n                        ");
    ɵngcc0.ɵɵadvance(36);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.datasourceMetrics.acquire.count);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(52, 28, ctx_r0.filterNaN(ctx_r0.datasourceMetrics.acquire.mean), "1.0-2"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(56, 31, ctx_r0.datasourceMetrics.acquire["0.0"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(60, 34, ctx_r0.datasourceMetrics.acquire["0.5"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(64, 37, ctx_r0.datasourceMetrics.acquire["0.75"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(68, 40, ctx_r0.datasourceMetrics.acquire["0.95"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(72, 43, ctx_r0.datasourceMetrics.acquire["0.99"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(76, 46, ctx_r0.filterNaN(ctx_r0.datasourceMetrics.acquire.max), "1.0-2"));
    ɵngcc0.ɵɵadvance(10);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.datasourceMetrics.creation.count);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(89, 49, ctx_r0.filterNaN(ctx_r0.datasourceMetrics.creation.mean), "1.0-2"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(93, 52, ctx_r0.datasourceMetrics.creation["0.0"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(97, 55, ctx_r0.datasourceMetrics.creation["0.5"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(101, 58, ctx_r0.datasourceMetrics.creation["0.75"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(105, 61, ctx_r0.datasourceMetrics.creation["0.95"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(109, 64, ctx_r0.datasourceMetrics.creation["0.99"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(113, 67, ctx_r0.filterNaN(ctx_r0.datasourceMetrics.creation.max), "1.0-2"));
    ɵngcc0.ɵɵadvance(10);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.datasourceMetrics.usage.count);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(126, 70, ctx_r0.filterNaN(ctx_r0.datasourceMetrics.usage.mean), "1.0-2"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(130, 73, ctx_r0.datasourceMetrics.usage["0.0"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(134, 76, ctx_r0.datasourceMetrics.usage["0.5"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(138, 79, ctx_r0.datasourceMetrics.usage["0.75"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(142, 82, ctx_r0.datasourceMetrics.usage["0.95"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(146, 85, ctx_r0.datasourceMetrics.usage["0.99"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(150, 88, ctx_r0.filterNaN(ctx_r0.datasourceMetrics.usage.max), "1.0-2"));
} }
function JhiMetricsEndpointsRequestsComponent_div_4_ng_container_24_tr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtext(1, "\n                            ");
    ɵngcc0.ɵɵelementStart(2, "td");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n                            ");
    ɵngcc0.ɵɵelementStart(5, "td");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n                            ");
    ɵngcc0.ɵɵelementStart(8, "td", 3);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(10, "\n                            ");
    ɵngcc0.ɵɵelementStart(11, "td", 3);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(14, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var method_r4 = ctx.$implicit;
    var entry_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(method_r4.key);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.key);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(method_r4.value.count);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(13, 4, method_r4.value.mean, "1.0-3"));
} }
function JhiMetricsEndpointsRequestsComponent_div_4_ng_container_24_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1, "\n                        ");
    ɵngcc0.ɵɵtemplate(2, JhiMetricsEndpointsRequestsComponent_div_4_ng_container_24_tr_2_Template, 15, 7, "tr", 4);
    ɵngcc0.ɵɵpipe(3, "keys");
    ɵngcc0.ɵɵtext(4, "\n                    ");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var entry_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(3, 1, entry_r2.value));
} }
function JhiMetricsEndpointsRequestsComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "table", 2);
    ɵngcc0.ɵɵtext(3, "\n                ");
    ɵngcc0.ɵɵelementStart(4, "thead");
    ɵngcc0.ɵɵtext(5, "\n                    ");
    ɵngcc0.ɵɵelementStart(6, "tr");
    ɵngcc0.ɵɵtext(7, "\n                        ");
    ɵngcc0.ɵɵelementStart(8, "th");
    ɵngcc0.ɵɵtext(9, "Method");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(10, "\n                        ");
    ɵngcc0.ɵɵelementStart(11, "th");
    ɵngcc0.ɵɵtext(12, "Endpoint url");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                        ");
    ɵngcc0.ɵɵelementStart(14, "th", 3);
    ɵngcc0.ɵɵtext(15, "Count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(16, "\n                        ");
    ɵngcc0.ɵɵelementStart(17, "th", 3);
    ɵngcc0.ɵɵtext(18, "Mean");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(19, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(20, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(21, "\n                ");
    ɵngcc0.ɵɵelementStart(22, "tbody");
    ɵngcc0.ɵɵtext(23, "\n                    ");
    ɵngcc0.ɵɵtemplate(24, JhiMetricsEndpointsRequestsComponent_div_4_ng_container_24_Template, 5, 3, "ng-container", 4);
    ɵngcc0.ɵɵpipe(25, "keys");
    ɵngcc0.ɵɵtext(26, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(27, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(28, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(24);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(25, 1, ctx_r0.endpointsRequestsMetrics));
} }
function JhiMetricsGarbageCollectorComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "number");
    ɵngcc0.ɵɵpipe(5, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n                    ");
    ɵngcc0.ɵɵelementStart(7, "ngb-progressbar", 5);
    ɵngcc0.ɵɵtext(8, "\n                        ");
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2("\n                        GC Live Data Size/GC Max Data Size (", ɵngcc0.ɵɵpipeBind2(4, 7, ctx_r0.garbageCollectorMetrics["jvm.gc.live.data.size"] / 1048576, "1.0-0"), "M / ", ɵngcc0.ɵɵpipeBind2(5, 10, ctx_r0.garbageCollectorMetrics["jvm.gc.max.data.size"] / 1048576, "1.0-0"), "M)");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("max", ctx_r0.garbageCollectorMetrics["jvm.gc.max.data.size"])("value", ctx_r0.garbageCollectorMetrics["jvm.gc.live.data.size"])("striped", true)("animated", false);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(11, 13, 100 * ctx_r0.garbageCollectorMetrics["jvm.gc.live.data.size"] / ctx_r0.garbageCollectorMetrics["jvm.gc.max.data.size"], "1.0-2"), "%");
} }
function JhiMetricsGarbageCollectorComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "number");
    ɵngcc0.ɵɵpipe(5, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\n                    ");
    ɵngcc0.ɵɵelementStart(7, "ngb-progressbar", 5);
    ɵngcc0.ɵɵtext(8, "\n                        ");
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2("\n                        GC Memory Promoted/GC Memory Allocated (", ɵngcc0.ɵɵpipeBind2(4, 7, ctx_r1.garbageCollectorMetrics["jvm.gc.memory.promoted"] / 1048576, "1.0-0"), "M / ", ɵngcc0.ɵɵpipeBind2(5, 10, ctx_r1.garbageCollectorMetrics["jvm.gc.memory.allocated"] / 1048576, "1.0-0"), "M)");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("max", ctx_r1.garbageCollectorMetrics["jvm.gc.memory.allocated"])("value", ctx_r1.garbageCollectorMetrics["jvm.gc.memory.promoted"])("striped", true)("animated", false);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(11, 13, 100 * ctx_r1.garbageCollectorMetrics["jvm.gc.memory.promoted"] / ctx_r1.garbageCollectorMetrics["jvm.gc.memory.allocated"], "1.0-2"), "%");
} }
function JhiMetricsGarbageCollectorComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 0);
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "div", 6);
    ɵngcc0.ɵɵtext(3, "Classes loaded");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n                    ");
    ɵngcc0.ɵɵelementStart(5, "div", 7);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n                ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.garbageCollectorMetrics.classesLoaded);
} }
function JhiMetricsGarbageCollectorComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 0);
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "div", 6);
    ɵngcc0.ɵɵtext(3, "Classes unloaded");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n                    ");
    ɵngcc0.ɵɵelementStart(5, "div", 7);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n                ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.garbageCollectorMetrics.classesUnloaded);
} }
function JhiMetricsGarbageCollectorComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtext(1, "\n                ");
    ɵngcc0.ɵɵelementStart(2, "table", 9);
    ɵngcc0.ɵɵtext(3, "\n                    ");
    ɵngcc0.ɵɵelementStart(4, "thead");
    ɵngcc0.ɵɵtext(5, "\n                        ");
    ɵngcc0.ɵɵelementStart(6, "tr");
    ɵngcc0.ɵɵtext(7, "\n                            ");
    ɵngcc0.ɵɵelement(8, "th");
    ɵngcc0.ɵɵtext(9, "\n                            ");
    ɵngcc0.ɵɵelementStart(10, "th", 10);
    ɵngcc0.ɵɵtext(11, "Count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, "\n                            ");
    ɵngcc0.ɵɵelementStart(13, "th", 11);
    ɵngcc0.ɵɵtext(14, "Mean");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(15, "\n                            ");
    ɵngcc0.ɵɵelementStart(16, "th", 12);
    ɵngcc0.ɵɵtext(17, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(18, "\n                            ");
    ɵngcc0.ɵɵelementStart(19, "th", 13);
    ɵngcc0.ɵɵtext(20, "p50");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(21, "\n                            ");
    ɵngcc0.ɵɵelementStart(22, "th", 14);
    ɵngcc0.ɵɵtext(23, "p75");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(24, "\n                            ");
    ɵngcc0.ɵɵelementStart(25, "th", 15);
    ɵngcc0.ɵɵtext(26, "p95");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(27, "\n                            ");
    ɵngcc0.ɵɵelementStart(28, "th", 16);
    ɵngcc0.ɵɵtext(29, "p99");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(30, "\n                            ");
    ɵngcc0.ɵɵelementStart(31, "th", 17);
    ɵngcc0.ɵɵtext(32, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(33, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(34, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(35, "\n                    ");
    ɵngcc0.ɵɵelementStart(36, "tbody");
    ɵngcc0.ɵɵtext(37, "\n                        ");
    ɵngcc0.ɵɵelementStart(38, "tr");
    ɵngcc0.ɵɵtext(39, "\n                            ");
    ɵngcc0.ɵɵelementStart(40, "td");
    ɵngcc0.ɵɵtext(41, "jvm.gc.pause");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(42, "\n                            ");
    ɵngcc0.ɵɵelementStart(43, "td", 18);
    ɵngcc0.ɵɵtext(44);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(45, "\n                            ");
    ɵngcc0.ɵɵelementStart(46, "td", 18);
    ɵngcc0.ɵɵtext(47);
    ɵngcc0.ɵɵpipe(48, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(49, "\n                            ");
    ɵngcc0.ɵɵelementStart(50, "td", 18);
    ɵngcc0.ɵɵtext(51);
    ɵngcc0.ɵɵpipe(52, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(53, "\n                            ");
    ɵngcc0.ɵɵelementStart(54, "td", 18);
    ɵngcc0.ɵɵtext(55);
    ɵngcc0.ɵɵpipe(56, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(57, "\n                            ");
    ɵngcc0.ɵɵelementStart(58, "td", 18);
    ɵngcc0.ɵɵtext(59);
    ɵngcc0.ɵɵpipe(60, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(61, "\n                            ");
    ɵngcc0.ɵɵelementStart(62, "td", 18);
    ɵngcc0.ɵɵtext(63);
    ɵngcc0.ɵɵpipe(64, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(65, "\n                            ");
    ɵngcc0.ɵɵelementStart(66, "td", 18);
    ɵngcc0.ɵɵtext(67);
    ɵngcc0.ɵɵpipe(68, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(69, "\n                            ");
    ɵngcc0.ɵɵelementStart(70, "td", 18);
    ɵngcc0.ɵɵtext(71);
    ɵngcc0.ɵɵpipe(72, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(73, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(74, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(75, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(76, "\n            ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(44);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.garbageCollectorMetrics["jvm.gc.pause"].count);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(48, 8, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"].mean, "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(52, 11, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"]["0.0"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(56, 14, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"]["0.5"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(60, 17, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"]["0.75"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(64, 20, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"]["0.95"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(68, 23, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"]["0.99"], "1.0-3"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(72, 26, ctx_r4.garbageCollectorMetrics["jvm.gc.pause"].max, "1.0-3"));
} }
function JhiMetricsHttpRequestComponent_table_4_tr_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtext(1, "\n                    ");
    ɵngcc0.ɵɵelementStart(2, "td");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n                    ");
    ɵngcc0.ɵɵelementStart(5, "td");
    ɵngcc0.ɵɵtext(6, "\n                        ");
    ɵngcc0.ɵɵelementStart(7, "ngb-progressbar", 8);
    ɵngcc0.ɵɵtext(8, "\n                            ");
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(11, "\n                        ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, "\n                    ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(13, "\n                    ");
    ɵngcc0.ɵɵelementStart(14, "td", 9);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(17, "\n                    ");
    ɵngcc0.ɵɵelementStart(18, "td", 9);
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(21, "\n                ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r2 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.key);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("max", ctx_r1.requestMetrics["all"].count)("value", entry_r2.value.count)("striped", true)("animated", false);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(entry_r2.value.count);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1("\n                        ", ɵngcc0.ɵɵpipeBind2(16, 8, ctx_r1.filterNaN(entry_r2.value.mean), "1.0-2"), "\n                    ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(20, 11, entry_r2.value.max, "1.0-2"));
} }
function JhiMetricsHttpRequestComponent_table_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "table", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "thead");
    ɵngcc0.ɵɵtext(3, "\n                ");
    ɵngcc0.ɵɵelementStart(4, "tr");
    ɵngcc0.ɵɵtext(5, "\n                    ");
    ɵngcc0.ɵɵelementStart(6, "th", 3);
    ɵngcc0.ɵɵtext(7, "Code");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n                    ");
    ɵngcc0.ɵɵelementStart(9, "th", 4);
    ɵngcc0.ɵɵtext(10, "Count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(11, "\n                    ");
    ɵngcc0.ɵɵelementStart(12, "th", 5);
    ɵngcc0.ɵɵtext(13, "Mean");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(14, "\n                    ");
    ɵngcc0.ɵɵelementStart(15, "th", 6);
    ɵngcc0.ɵɵtext(16, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(17, "\n                ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(18, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(19, "\n            ");
    ɵngcc0.ɵɵelementStart(20, "tbody");
    ɵngcc0.ɵɵtext(21, "\n                ");
    ɵngcc0.ɵɵtemplate(22, JhiMetricsHttpRequestComponent_table_4_tr_22_Template, 22, 14, "tr", 7);
    ɵngcc0.ɵɵpipe(23, "keys");
    ɵngcc0.ɵɵtext(24, "\n            ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(25, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(22);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(23, 1, ctx_r0.requestMetrics["percode"]));
} }
function JhiMetricsSystemComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵtext(3, "Uptime");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 4);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.convertMillisecondsToDuration(ctx_r0.systemMetrics["process.uptime"]));
} }
function JhiMetricsSystemComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵtext(3, "Start time");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 4);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "date");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(7, 1, ctx_r1.systemMetrics["process.start.time"], "full"));
} }
function JhiMetricsSystemComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵtext(3, "Process CPU usage");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(7, 1, 100 * ctx_r2.systemMetrics["process.cpu.usage"], "1.0-2"), " %");
} }
function JhiMetricsSystemComponent_ngb_progressbar_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ngb-progressbar", 7);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(5, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("value", 100 * ctx_r3.systemMetrics["process.cpu.usage"])("striped", true)("animated", false);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(4, 4, 100 * ctx_r3.systemMetrics["process.cpu.usage"], "1.0-2"), " %");
} }
function JhiMetricsSystemComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵtext(3, "System CPU usage");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(7, 1, 100 * ctx_r4.systemMetrics["system.cpu.usage"], "1.0-2"), " %");
} }
function JhiMetricsSystemComponent_ngb_progressbar_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ngb-progressbar", 7);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(5, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("value", 100 * ctx_r5.systemMetrics["system.cpu.usage"])("striped", true)("animated", false);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(4, 4, 100 * ctx_r5.systemMetrics["system.cpu.usage"], "1.0-2"), " %");
} }
function JhiMetricsSystemComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵtext(3, "System CPU count");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.systemMetrics["system.cpu.count"]);
} }
function JhiMetricsSystemComponent_div_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵtext(3, "System 1m Load average");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(7, 1, ctx_r7.systemMetrics["system.load.average.1m"], "1.0-2"));
} }
function JhiMetricsSystemComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵtext(3, "Process files max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(7, 1, ctx_r8.systemMetrics["process.files.max"], "1.0-0"));
} }
function JhiMetricsSystemComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1, "\n            ");
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵtext(3, "Process files open");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "\n            ");
    ɵngcc0.ɵɵelementStart(5, "div", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, "\n        ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(7, 1, ctx_r9.systemMetrics["process.files.open"], "1.0-0"));
} }
var JhiModuleConfig = /** @class */ (function () {
    function JhiModuleConfig() {
        this.sortIcon = faSort;
        this.sortAscIcon = faSortUp;
        this.sortDescIcon = faSortDown;
        this.i18nEnabled = false;
        this.defaultI18nLang = 'en';
        this.noi18nMessage = 'translation-not-found';
        this.alertAsToast = false;
        this.alertTimeout = 5000;
        this.classBadgeTrue = 'badge badge-success';
        this.classBadgeFalse = 'badge badge-danger';
        this.classTrue = 'fa fa-lg fa-check text-success';
        this.classFalse = 'fa fa-lg fa-times text-danger';
    }
    JhiModuleConfig.ɵprov = ɵɵdefineInjectable({ factory: function JhiModuleConfig_Factory() { return new JhiModuleConfig(); }, token: JhiModuleConfig, providedIn: "root" });
JhiModuleConfig.ɵfac = function JhiModuleConfig_Factory(t) { return new (t || JhiModuleConfig)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiModuleConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiModuleConfig;
}());

var JhiConfigService = /** @class */ (function () {
    function JhiConfigService(moduleConfig) {
        this.CONFIG_OPTIONS = __assign(__assign({}, new JhiModuleConfig()), moduleConfig);
    }
    JhiConfigService.prototype.getConfig = function () {
        return this.CONFIG_OPTIONS;
    };
    JhiConfigService.ctorParameters = function () { return [
        { type: JhiModuleConfig }
    ]; };
    JhiConfigService.ɵprov = ɵɵdefineInjectable({ factory: function JhiConfigService_Factory() { return new JhiConfigService(ɵɵinject(JhiModuleConfig)); }, token: JhiConfigService, providedIn: "root" });
JhiConfigService.ɵfac = function JhiConfigService_Factory(t) { return new (t || JhiConfigService)(ɵngcc0.ɵɵinject(JhiModuleConfig)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiConfigService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: JhiModuleConfig }]; }, null); })();
    return JhiConfigService;
}());

/**
 * A component that will take care of item count statistics of a pagination.
 */
var JhiItemCountComponent = /** @class */ (function () {
    function JhiItemCountComponent(config) {
        this.i18nEnabled = config.CONFIG_OPTIONS.i18nEnabled;
    }
    /**
     * "translate-values" JSON of the template
     */
    JhiItemCountComponent.prototype.i18nValues = function () {
        var first = (this.page - 1) * this.itemsPerPage === 0 ? 1 : (this.page - 1) * this.itemsPerPage + 1;
        var second = this.page * this.itemsPerPage < this.total ? this.page * this.itemsPerPage : this.total;
        return {
            first: first,
            second: second,
            total: this.total
        };
    };
    JhiItemCountComponent.ctorParameters = function () { return [
        { type: JhiConfigService }
    ]; };
    __decorate([
        Input()
    ], JhiItemCountComponent.prototype, "page", void 0);
    __decorate([
        Input()
    ], JhiItemCountComponent.prototype, "total", void 0);
    __decorate([
        Input()
    ], JhiItemCountComponent.prototype, "itemsPerPage", void 0);
JhiItemCountComponent.ɵfac = function JhiItemCountComponent_Factory(t) { return new (t || JhiItemCountComponent)(ɵngcc0.ɵɵdirectiveInject(JhiConfigService)); };
JhiItemCountComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiItemCountComponent, selectors: [["jhi-item-count"]], inputs: { page: "page", total: "total", itemsPerPage: "itemsPerPage" }, decls: 6, vars: 2, consts: [["class", "info jhi-item-count", "jhiTranslate", "global.item-count", 3, "translateValues", 4, "ngIf", "ngIfElse"], ["class", "info jhi-item-count"], ["noI18n", ""], ["jhiTranslate", "global.item-count", 1, "info", "jhi-item-count", 3, "translateValues"]], template: function JhiItemCountComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵtemplate(1, JhiItemCountComponent_div_1_Template, 2, 1, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n        ");
        ɵngcc0.ɵɵtemplate(3, JhiItemCountComponent_ng_template_3_Template, 1, 3, "ng-template", 1, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtext(5, "\n    ");
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.i18nEnabled)("ngIfElse", _r1);
    } }, directives: function () { return [ɵngcc1.NgIf, JhiTranslateDirective]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiItemCountComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-item-count',
                template: "\n        <div *ngIf=\"i18nEnabled; else noI18n\" class=\"info jhi-item-count\" jhiTranslate=\"global.item-count\" [translateValues]=\"i18nValues()\">\n            /* [attr.translateValues] is used to get entire values in tests */\n        </div>\n        <ng-template #noI18n class=\"info jhi-item-count\">\n            Showing\n            {{ (page - 1) * itemsPerPage == 0 ? 1 : (page - 1) * itemsPerPage + 1 }}\n            - {{ page * itemsPerPage < total ? page * itemsPerPage : total }} of {{ total }} items.\n        </ng-template>\n    "
            }]
    }], function () { return [{ type: JhiConfigService }]; }, { page: [{
            type: Input
        }], total: [{
            type: Input
        }], itemsPerPage: [{
            type: Input
        }] }); })();
    return JhiItemCountComponent;
}());

/**
 * This component can be used to display a boolean value by defining the @Input attributes
 * If an attribute is not provided, default values will be applied (see JhiModuleConfig class)
 * Have a look at the following examples
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * <jhi-boolean [value]="inputBooleanVariable"></jhi-boolean>
 *
 * - Display a green check when inputBooleanVariable is true
 * - Display a red cross when inputBooleanVariable is false
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * <jhi-boolean
 *     [value]="inputBooleanVariable">
 *     classTrue="fa fa-lg fa-check text-primary"
 *     classFalse="fa fa-lg fa-times text-warning"
 * </jhi-boolean>
 *
 * - Display a blue check when inputBooleanVariable is true
 * - Display an orange cross when inputBooleanVariable is false
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * <jhi-boolean
 *     [value]="inputBooleanVariable">
 *     classTrue="fa fa-lg fa-check"
 *     classFalse=""
 * </jhi-boolean>
 *
 * - Display a black check when inputBooleanVariable is true
 * - Do not display anything when inputBooleanVariable is false
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * <jhi-boolean
 *     [value]="inputBooleanVariable"
 *     [textTrue]="'userManagement.activated' | translate"
 *     textFalse="deactivated">
 * </jhi-boolean>
 *
 * - Display a green badge when inputBooleanVariable is true
 * - Display a red badge when inputBooleanVariable is false
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * <jhi-boolean
 *     [value]="user.activated"
 *     classTrue="badge badge-warning"
 *     classFalse="badge badge-info"
 *     [textTrue]="'userManagement.activated' | translate"
 *     textFalse="deactivated">
 * </jhi-boolean>
 *
 * - Display an orange badge and write 'activated' when inputBooleanVariable is true
 * - Display a blue badge and write 'deactivated' when inputBooleanVariable is false
 */
var JhiBooleanComponent = /** @class */ (function () {
    function JhiBooleanComponent(configService) {
        this.config = configService.getConfig();
    }
    JhiBooleanComponent.prototype.ngOnInit = function () {
        if (this.textTrue === undefined) {
            if (this.classTrue === undefined) {
                this.classTrue = this.config.classTrue;
            }
        }
        else {
            if (this.classTrue === undefined) {
                this.classTrue = this.config.classBadgeTrue;
            }
        }
        if (this.textFalse === undefined) {
            if (this.classFalse === undefined) {
                this.classFalse = this.config.classFalse;
            }
        }
        else {
            if (this.classFalse === undefined) {
                this.classFalse = this.config.classBadgeFalse;
            }
        }
    };
    JhiBooleanComponent.ctorParameters = function () { return [
        { type: JhiConfigService }
    ]; };
    __decorate([
        Input()
    ], JhiBooleanComponent.prototype, "value", void 0);
    __decorate([
        Input()
    ], JhiBooleanComponent.prototype, "classTrue", void 0);
    __decorate([
        Input()
    ], JhiBooleanComponent.prototype, "classFalse", void 0);
    __decorate([
        Input()
    ], JhiBooleanComponent.prototype, "textTrue", void 0);
    __decorate([
        Input()
    ], JhiBooleanComponent.prototype, "textFalse", void 0);
JhiBooleanComponent.ɵfac = function JhiBooleanComponent_Factory(t) { return new (t || JhiBooleanComponent)(ɵngcc0.ɵɵdirectiveInject(JhiConfigService)); };
JhiBooleanComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiBooleanComponent, selectors: [["jhi-boolean"]], inputs: { classTrue: "classTrue", classFalse: "classFalse", value: "value", textTrue: "textTrue", textFalse: "textFalse" }, decls: 4, vars: 2, consts: [[3, "ngClass", "innerHtml"]], template: function JhiBooleanComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "span", 0);
        ɵngcc0.ɵɵtext(2, " ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.value ? ctx.classTrue : ctx.classFalse)("innerHtml", ctx.value ? ctx.textTrue : ctx.textFalse, ɵngcc0.ɵɵsanitizeHtml);
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiBooleanComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-boolean',
                template: "\n        <span [ngClass]=\"value ? classTrue : classFalse\" [innerHtml]=\"value ? textTrue : textFalse\"> </span>\n    "
            }]
    }], function () { return [{ type: JhiConfigService }]; }, { classTrue: [{
            type: Input
        }], classFalse: [{
            type: Input
        }], value: [{
            type: Input
        }], textTrue: [{
            type: Input
        }], textFalse: [{
            type: Input
        }] }); })();
    return JhiBooleanComponent;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
function numberOfBytes(base64String) {
    function endsWith(suffix, str) {
        return str.includes(suffix, str.length - suffix.length);
    }
    function paddingSize(value) {
        if (endsWith('==', value)) {
            return 2;
        }
        if (endsWith('=', value)) {
            return 1;
        }
        return 0;
    }
    return (base64String.length / 4) * 3 - paddingSize(base64String);
}

var JhiMaxbytesValidatorDirective = /** @class */ (function () {
    function JhiMaxbytesValidatorDirective() {
    }
    JhiMaxbytesValidatorDirective_1 = JhiMaxbytesValidatorDirective;
    JhiMaxbytesValidatorDirective.prototype.validate = function (c) {
        return c.value && numberOfBytes(c.value) > this.jhiMaxbytes
            ? {
                maxbytes: {
                    valid: false
                }
            }
            : null;
    };
    var JhiMaxbytesValidatorDirective_1;
    __decorate([
        Input()
    ], JhiMaxbytesValidatorDirective.prototype, "jhiMaxbytes", void 0);
JhiMaxbytesValidatorDirective.ɵfac = function JhiMaxbytesValidatorDirective_Factory(t) { return new (t || JhiMaxbytesValidatorDirective)(); };
JhiMaxbytesValidatorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiMaxbytesValidatorDirective, selectors: [["", "jhiMaxbytes", "", "ngModel", ""]], inputs: { jhiMaxbytes: "jhiMaxbytes" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMaxbytesValidatorDirective_1; }), multi: true }])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMaxbytesValidatorDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiMaxbytes][ngModel]',
                // eslint-disable-next-line @typescript-eslint/no-use-before-define
                providers: [{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMaxbytesValidatorDirective_1; }), multi: true }]
            }]
    }], function () { return []; }, { jhiMaxbytes: [{
            type: Input
        }] }); })();
    return JhiMaxbytesValidatorDirective;
}());

var JhiMinbytesValidatorDirective = /** @class */ (function () {
    function JhiMinbytesValidatorDirective() {
    }
    JhiMinbytesValidatorDirective_1 = JhiMinbytesValidatorDirective;
    JhiMinbytesValidatorDirective.prototype.validate = function (c) {
        return c.value && numberOfBytes(c.value) < this.jhiMinbytes
            ? {
                minbytes: {
                    valid: false
                }
            }
            : null;
    };
    var JhiMinbytesValidatorDirective_1;
    __decorate([
        Input()
    ], JhiMinbytesValidatorDirective.prototype, "jhiMinbytes", void 0);
JhiMinbytesValidatorDirective.ɵfac = function JhiMinbytesValidatorDirective_Factory(t) { return new (t || JhiMinbytesValidatorDirective)(); };
JhiMinbytesValidatorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiMinbytesValidatorDirective, selectors: [["", "jhiMinbytes", "", "ngModel", ""]], inputs: { jhiMinbytes: "jhiMinbytes" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMinbytesValidatorDirective_1; }), multi: true }])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMinbytesValidatorDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiMinbytes][ngModel]',
                // eslint-disable-next-line @typescript-eslint/no-use-before-define
                providers: [{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMinbytesValidatorDirective_1; }), multi: true }]
            }]
    }], function () { return []; }, { jhiMinbytes: [{
            type: Input
        }] }); })();
    return JhiMinbytesValidatorDirective;
}());

var JhiMaxValidatorDirective = /** @class */ (function () {
    function JhiMaxValidatorDirective() {
    }
    JhiMaxValidatorDirective_1 = JhiMaxValidatorDirective;
    JhiMaxValidatorDirective.prototype.validate = function (c) {
        return c.value === undefined || c.value === null || c.value <= this.jhiMax
            ? null
            : {
                max: {
                    valid: false
                }
            };
    };
    var JhiMaxValidatorDirective_1;
    __decorate([
        Input()
    ], JhiMaxValidatorDirective.prototype, "jhiMax", void 0);
JhiMaxValidatorDirective.ɵfac = function JhiMaxValidatorDirective_Factory(t) { return new (t || JhiMaxValidatorDirective)(); };
JhiMaxValidatorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiMaxValidatorDirective, selectors: [["", "jhiMax", "", "ngModel", ""]], inputs: { jhiMax: "jhiMax" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMaxValidatorDirective_1; }), multi: true }])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMaxValidatorDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiMax][ngModel]',
                // eslint-disable-next-line @typescript-eslint/no-use-before-define
                providers: [{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMaxValidatorDirective_1; }), multi: true }]
            }]
    }], function () { return []; }, { jhiMax: [{
            type: Input
        }] }); })();
    return JhiMaxValidatorDirective;
}());

var JhiMinValidatorDirective = /** @class */ (function () {
    function JhiMinValidatorDirective() {
    }
    JhiMinValidatorDirective_1 = JhiMinValidatorDirective;
    JhiMinValidatorDirective.prototype.validate = function (c) {
        return c.value === undefined || c.value === null || c.value >= this.jhiMin
            ? null
            : {
                min: {
                    valid: false
                }
            };
    };
    var JhiMinValidatorDirective_1;
    __decorate([
        Input()
    ], JhiMinValidatorDirective.prototype, "jhiMin", void 0);
JhiMinValidatorDirective.ɵfac = function JhiMinValidatorDirective_Factory(t) { return new (t || JhiMinValidatorDirective)(); };
JhiMinValidatorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiMinValidatorDirective, selectors: [["", "jhiMin", "", "ngModel", ""]], inputs: { jhiMin: "jhiMin" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMinValidatorDirective_1; }), multi: true }])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMinValidatorDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiMin][ngModel]',
                // eslint-disable-next-line @typescript-eslint/no-use-before-define
                providers: [{ provide: NG_VALIDATORS, useExisting: forwardRef(function () { return JhiMinValidatorDirective_1; }), multi: true }]
            }]
    }], function () { return []; }, { jhiMin: [{
            type: Input
        }] }); })();
    return JhiMinValidatorDirective;
}());

var JhiSortDirective = /** @class */ (function () {
    function JhiSortDirective() {
        this.predicateChange = new EventEmitter();
        this.ascendingChange = new EventEmitter();
    }
    JhiSortDirective.prototype.sort = function (field) {
        this.ascending = field !== this.predicate ? true : !this.ascending;
        this.predicate = field;
        this.predicateChange.emit(field);
        this.ascendingChange.emit(this.ascending);
        this.callback();
    };
    __decorate([
        Input()
    ], JhiSortDirective.prototype, "predicate", void 0);
    __decorate([
        Input()
    ], JhiSortDirective.prototype, "ascending", void 0);
    __decorate([
        Input()
    ], JhiSortDirective.prototype, "callback", void 0);
    __decorate([
        Output()
    ], JhiSortDirective.prototype, "predicateChange", void 0);
    __decorate([
        Output()
    ], JhiSortDirective.prototype, "ascendingChange", void 0);
JhiSortDirective.ɵfac = function JhiSortDirective_Factory(t) { return new (t || JhiSortDirective)(); };
JhiSortDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiSortDirective, selectors: [["", "jhiSort", ""]], inputs: { ascending: "ascending", predicate: "predicate", callback: "callback" }, outputs: { predicateChange: "predicateChange", ascendingChange: "ascendingChange" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiSortDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiSort]'
            }]
    }], function () { return []; }, { predicateChange: [{
            type: Output
        }], ascendingChange: [{
            type: Output
        }], ascending: [{
            type: Input
        }], predicate: [{
            type: Input
        }], callback: [{
            type: Input
        }] }); })();
    return JhiSortDirective;
}());

var JhiSortByDirective = /** @class */ (function () {
    function JhiSortByDirective(jhiSort, configService) {
        this.jhiSort = jhiSort;
        this.jhiSort = jhiSort;
        var config = configService.getConfig();
        this.sortIcon = config.sortIcon;
        this.sortAscIcon = config.sortAscIcon;
        this.sortDescIcon = config.sortDescIcon;
    }
    JhiSortByDirective.prototype.ngAfterContentInit = function () {
        if (this.jhiSort.predicate && this.jhiSort.predicate !== '_score' && this.jhiSort.predicate === this.jhiSortBy) {
            this.updateIconDefinition(this.iconComponent, this.jhiSort.ascending ? this.sortAscIcon : this.sortDescIcon);
            this.jhiSort.activeIconComponent = this.iconComponent;
        }
    };
    JhiSortByDirective.prototype.onClick = function () {
        if (this.jhiSort.predicate && this.jhiSort.predicate !== '_score') {
            this.jhiSort.sort(this.jhiSortBy);
            this.updateIconDefinition(this.jhiSort.activeIconComponent, this.sortIcon);
            this.updateIconDefinition(this.iconComponent, this.jhiSort.ascending ? this.sortAscIcon : this.sortDescIcon);
            this.jhiSort.activeIconComponent = this.iconComponent;
        }
    };
    JhiSortByDirective.prototype.updateIconDefinition = function (iconComponent, icon) {
        if (iconComponent) {
            iconComponent.icon = icon.iconName;
            iconComponent.render();
        }
    };
    JhiSortByDirective.ctorParameters = function () { return [
        { type: JhiSortDirective, decorators: [{ type: Host }] },
        { type: JhiConfigService }
    ]; };
    __decorate([
        Input()
    ], JhiSortByDirective.prototype, "jhiSortBy", void 0);
    __decorate([
        ContentChild(FaIconComponent, { static: true })
    ], JhiSortByDirective.prototype, "iconComponent", void 0);
    __decorate([
        HostListener('click')
    ], JhiSortByDirective.prototype, "onClick", null);
    JhiSortByDirective = __decorate([ __param(0, Host())
    ], JhiSortByDirective);
JhiSortByDirective.ɵfac = function JhiSortByDirective_Factory(t) { return new (t || JhiSortByDirective)(ɵngcc0.ɵɵdirectiveInject(JhiSortDirective, 1), ɵngcc0.ɵɵdirectiveInject(JhiConfigService)); };
JhiSortByDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiSortByDirective, selectors: [["", "jhiSortBy", ""]], contentQueries: function JhiSortByDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, FaIconComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconComponent = _t.first);
    } }, hostBindings: function JhiSortByDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function JhiSortByDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } }, inputs: { jhiSortBy: "jhiSortBy" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiSortByDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiSortBy]'
            }]
    }], function () { return [{ type: JhiSortDirective, decorators: [{
                type: Host
            }] }, { type: JhiConfigService }]; }, { onClick: [{
            type: HostListener,
            args: ['click']
        }], jhiSortBy: [{
            type: Input
        }], iconComponent: [{
            type: ContentChild,
            args: [FaIconComponent, { static: true }]
        }] }); })();
    return JhiSortByDirective;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

var JhiLanguageService = /** @class */ (function () {
    function JhiLanguageService(translateService, configService) {
        this.translateService = translateService;
        this.configService = configService;
        this.currentLang = 'en';
    }
    JhiLanguageService.prototype.init = function () {
        var config = this.configService.getConfig();
        this.currentLang = config.defaultI18nLang;
        this.translateService.setDefaultLang(this.currentLang);
        this.translateService.use(this.currentLang);
    };
    JhiLanguageService.prototype.changeLanguage = function (languageKey) {
        this.currentLang = languageKey;
        this.configService.CONFIG_OPTIONS.defaultI18nLang = languageKey;
        this.translateService.use(this.currentLang);
    };
    /**
     * @deprecated Will be removed when releasing generator-jhipster v7
     */
    JhiLanguageService.prototype.getCurrent = function () {
        return Promise.resolve(this.currentLang);
    };
    JhiLanguageService.prototype.getCurrentLanguage = function () {
        return this.currentLang;
    };
    JhiLanguageService.ctorParameters = function () { return [
        { type: TranslateService },
        { type: JhiConfigService }
    ]; };
    JhiLanguageService.ɵprov = ɵɵdefineInjectable({ factory: function JhiLanguageService_Factory() { return new JhiLanguageService(ɵɵinject(TranslateService), ɵɵinject(JhiConfigService)); }, token: JhiLanguageService, providedIn: "root" });
JhiLanguageService.ɵfac = function JhiLanguageService_Factory(t) { return new (t || JhiLanguageService)(ɵngcc0.ɵɵinject(ɵngcc2.TranslateService), ɵngcc0.ɵɵinject(JhiConfigService)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiLanguageService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc2.TranslateService }, { type: JhiConfigService }]; }, null); })();
    return JhiLanguageService;
}());

/**
 * A wrapper directive on top of the translate pipe as the inbuilt translate directive from ngx-translate is too verbose and buggy
 */
var JhiTranslateDirective = /** @class */ (function () {
    function JhiTranslateDirective(configService, el, translateService) {
        this.configService = configService;
        this.el = el;
        this.translateService = translateService;
        this.directiveDestroyed = new Subject();
    }
    JhiTranslateDirective.prototype.ngOnInit = function () {
        var _this = this;
        var enabled = this.configService.getConfig().i18nEnabled;
        if (enabled) {
            this.translateService.onLangChange.pipe(takeUntil(this.directiveDestroyed)).subscribe(function () {
                _this.getTranslation();
            });
        }
    };
    JhiTranslateDirective.prototype.ngOnChanges = function () {
        var enabled = this.configService.getConfig().i18nEnabled;
        if (enabled) {
            this.getTranslation();
        }
    };
    JhiTranslateDirective.prototype.ngOnDestroy = function () {
        this.directiveDestroyed.next();
        this.directiveDestroyed.complete();
    };
    JhiTranslateDirective.prototype.getTranslation = function () {
        var _this = this;
        this.translateService
            .get(this.jhiTranslate, this.translateValues)
            .pipe(takeUntil(this.directiveDestroyed))
            .subscribe(function (value) {
            _this.el.nativeElement.innerHTML = value;
        }, function () {
            return _this.configService.getConfig().noi18nMessage + "[" + _this.jhiTranslate + "]";
        });
    };
    JhiTranslateDirective.ctorParameters = function () { return [
        { type: JhiConfigService },
        { type: ElementRef },
        { type: TranslateService, decorators: [{ type: Optional }] }
    ]; };
    __decorate([
        Input()
    ], JhiTranslateDirective.prototype, "jhiTranslate", void 0);
    __decorate([
        Input()
    ], JhiTranslateDirective.prototype, "translateValues", void 0);
    JhiTranslateDirective = __decorate([ __param(2, Optional())
    ], JhiTranslateDirective);
JhiTranslateDirective.ɵfac = function JhiTranslateDirective_Factory(t) { return new (t || JhiTranslateDirective)(ɵngcc0.ɵɵdirectiveInject(JhiConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslateService, 8)); };
JhiTranslateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JhiTranslateDirective, selectors: [["", "jhiTranslate", ""]], inputs: { jhiTranslate: "jhiTranslate", translateValues: "translateValues" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiTranslateDirective, [{
        type: Directive,
        args: [{
                selector: '[jhiTranslate]'
            }]
    }], function () { return [{ type: JhiConfigService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.TranslateService, decorators: [{
                type: Optional
            }] }]; }, { jhiTranslate: [{
            type: Input
        }], translateValues: [{
            type: Input
        }] }); })();
    return JhiTranslateDirective;
}());

var JhiMissingTranslationHandler = /** @class */ (function () {
    function JhiMissingTranslationHandler(configService) {
        this.configService = configService;
    }
    JhiMissingTranslationHandler.prototype.handle = function (params) {
        var key = params.key;
        return this.configService.getConfig().noi18nMessage + "[" + key + "]";
    };
    return JhiMissingTranslationHandler;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

var JhiThreadModalComponent = /** @class */ (function () {
    function JhiThreadModalComponent(activeModal) {
        this.activeModal = activeModal;
        this.threadDumpAll = 0;
        this.threadDumpBlocked = 0;
        this.threadDumpRunnable = 0;
        this.threadDumpTimedWaiting = 0;
        this.threadDumpWaiting = 0;
    }
    JhiThreadModalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.threadDump.forEach(function (value) {
            if (value.threadState === 'RUNNABLE') {
                _this.threadDumpRunnable += 1;
            }
            else if (value.threadState === 'WAITING') {
                _this.threadDumpWaiting += 1;
            }
            else if (value.threadState === 'TIMED_WAITING') {
                _this.threadDumpTimedWaiting += 1;
            }
            else if (value.threadState === 'BLOCKED') {
                _this.threadDumpBlocked += 1;
            }
        });
        this.threadDumpAll = this.threadDumpRunnable + this.threadDumpWaiting + this.threadDumpTimedWaiting + this.threadDumpBlocked;
    };
    JhiThreadModalComponent.prototype.getBadgeClass = function (threadState) {
        if (threadState === 'RUNNABLE') {
            return 'badge-success';
        }
        else if (threadState === 'WAITING') {
            return 'badge-info';
        }
        else if (threadState === 'TIMED_WAITING') {
            return 'badge-warning';
        }
        else if (threadState === 'BLOCKED') {
            return 'badge-danger';
        }
    };
    JhiThreadModalComponent.ctorParameters = function () { return [
        { type: NgbActiveModal }
    ]; };
JhiThreadModalComponent.ɵfac = function JhiThreadModalComponent_Factory(t) { return new (t || JhiThreadModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgbActiveModal)); };
JhiThreadModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiThreadModalComponent, selectors: [["jhi-thread-modal"]], decls: 56, vars: 13, consts: [[1, "modal-header"], ["jhiTranslate", "metrics.jvm.threads.dump.title", 1, "modal-title"], ["type", "button", 1, "close", 3, "click"], [1, "modal-body"], [1, "badge", "badge-primary", 3, "click"], [1, "badge", "badge-pill", "badge-default"], [1, "badge", "badge-success", 3, "click"], [1, "badge", "badge-info", 3, "click"], [1, "badge", "badge-warning", 3, "click"], [1, "badge", "badge-danger", 3, "click"], [1, "mt-2"], ["type", "text", 1, "form-control", 3, "ngModel", "ngModelChange"], ["class", "pad", 4, "ngFor", "ngForOf"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary", "float-left", 3, "click"], [1, "pad"], [1, "badge", 3, "ngClass"], ["href", "javascript:void(0);", 3, "click"], ["jhiTranslate", "metrics.jvm.threads.dump.show", 3, "hidden"], ["jhiTranslate", "metrics.jvm.threads.dump.hide", 3, "hidden"], [1, "card", 3, "hidden"], [1, "card-body"], ["class", "break", 4, "ngFor", "ngForOf"], [1, "table", "table-sm", "table-responsive"], ["jhiTranslate", "metrics.jvm.threads.dump.blockedtime"], ["jhiTranslate", "metrics.jvm.threads.dump.blockedcount"], ["jhiTranslate", "metrics.jvm.threads.dump.waitedtime"], ["jhiTranslate", "metrics.jvm.threads.dump.waitedcount"], ["jhiTranslate", "metrics.jvm.threads.dump.lockname"], [1, "thread-dump-modal-lock", 3, "title"], [1, "break"], [1, "mt-1"]], template: function JhiThreadModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n            ");
        ɵngcc0.ɵɵelementStart(3, "h4", 1);
        ɵngcc0.ɵɵtext(4, "Threads dump");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(5, "\n            ");
        ɵngcc0.ɵɵelementStart(6, "button", 2);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_button_click_6_listener() { return ctx.activeModal.dismiss("closed"); });
        ɵngcc0.ɵɵtext(7, "\u00D7");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(9, "\n        ");
        ɵngcc0.ɵɵelementStart(10, "div", 3);
        ɵngcc0.ɵɵtext(11, "\n            ");
        ɵngcc0.ɵɵelementStart(12, "span", 4);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_span_click_12_listener() { return ctx.threadDumpFilter = {}; });
        ɵngcc0.ɵɵtext(13, "\n                All\u00A0");
        ɵngcc0.ɵɵelementStart(14, "span", 5);
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(16, " ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(17, "\u00A0\n            ");
        ɵngcc0.ɵɵelementStart(18, "span", 6);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_span_click_18_listener() { return ctx.threadDumpFilter = { threadState: "RUNNABLE" }; });
        ɵngcc0.ɵɵtext(19, "\n                Runnable\u00A0");
        ɵngcc0.ɵɵelementStart(20, "span", 5);
        ɵngcc0.ɵɵtext(21);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(22, " ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(23, "\u00A0\n            ");
        ɵngcc0.ɵɵelementStart(24, "span", 7);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_span_click_24_listener() { return ctx.threadDumpFilter = { threadState: "WAITING" }; });
        ɵngcc0.ɵɵtext(25, "Waiting\u00A0");
        ɵngcc0.ɵɵelementStart(26, "span", 5);
        ɵngcc0.ɵɵtext(27);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(28, "\u00A0\n            ");
        ɵngcc0.ɵɵelementStart(29, "span", 8);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_span_click_29_listener() { return ctx.threadDumpFilter = { threadState: "TIMED_WAITING" }; });
        ɵngcc0.ɵɵtext(30, "\n                Timed Waiting\u00A0");
        ɵngcc0.ɵɵelementStart(31, "span", 5);
        ɵngcc0.ɵɵtext(32);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(33, " ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(34, "\u00A0\n            ");
        ɵngcc0.ɵɵelementStart(35, "span", 9);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_span_click_35_listener() { return ctx.threadDumpFilter = { threadState: "BLOCKED" }; });
        ɵngcc0.ɵɵtext(36, "Blocked\u00A0");
        ɵngcc0.ɵɵelementStart(37, "span", 5);
        ɵngcc0.ɵɵtext(38);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(39, "\u00A0\n            ");
        ɵngcc0.ɵɵelementStart(40, "div", 10);
        ɵngcc0.ɵɵtext(41, "\u00A0");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(42, "\n            Filter\n            ");
        ɵngcc0.ɵɵelementStart(43, "input", 11);
        ɵngcc0.ɵɵlistener("ngModelChange", function JhiThreadModalComponent_Template_input_ngModelChange_43_listener($event) { return ctx.threadDumpFilter = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(44, "\n            ");
        ɵngcc0.ɵɵtemplate(45, JhiThreadModalComponent_div_45_Template, 74, 16, "div", 12);
        ɵngcc0.ɵɵpipe(46, "keys");
        ɵngcc0.ɵɵpipe(47, "pureFilter");
        ɵngcc0.ɵɵtext(48, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(49, "\n        ");
        ɵngcc0.ɵɵelementStart(50, "div", 13);
        ɵngcc0.ɵɵtext(51, "\n            ");
        ɵngcc0.ɵɵelementStart(52, "button", 14);
        ɵngcc0.ɵɵlistener("click", function JhiThreadModalComponent_Template_button_click_52_listener() { return ctx.activeModal.dismiss("closed"); });
        ɵngcc0.ɵɵtext(53, "\n                Done\n            ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(54, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(55, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(15);
        ɵngcc0.ɵɵtextInterpolate(ctx.threadDumpAll);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ctx.threadDumpRunnable);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ctx.threadDumpWaiting);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ctx.threadDumpTimedWaiting);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ctx.threadDumpBlocked);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngModel", ctx.threadDumpFilter);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(46, 7, ɵngcc0.ɵɵpipeBind3(47, 9, ctx.threadDump, ctx.threadDumpFilter, "lockName")));
    } }, directives: function () { return [JhiTranslateDirective, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc1.NgForOf, ɵngcc1.NgClass]; }, pipes: function () { return [JhiKeysPipe,
        JhiPureFilterPipe]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiThreadModalComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-thread-modal',
                template: "\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\" jhiTranslate=\"metrics.jvm.threads.dump.title\">Threads dump</h4>\n            <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss('closed')\">&times;</button>\n        </div>\n        <div class=\"modal-body\">\n            <span class=\"badge badge-primary\" (click)=\"threadDumpFilter = {}\">\n                All&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpAll }}</span> </span\n            >&nbsp;\n            <span class=\"badge badge-success\" (click)=\"threadDumpFilter = { threadState: 'RUNNABLE' }\">\n                Runnable&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpRunnable }}</span> </span\n            >&nbsp;\n            <span class=\"badge badge-info\" (click)=\"threadDumpFilter = { threadState: 'WAITING' }\"\n                >Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpWaiting }}</span></span\n            >&nbsp;\n            <span class=\"badge badge-warning\" (click)=\"threadDumpFilter = { threadState: 'TIMED_WAITING' }\">\n                Timed Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpTimedWaiting }}</span> </span\n            >&nbsp;\n            <span class=\"badge badge-danger\" (click)=\"threadDumpFilter = { threadState: 'BLOCKED' }\"\n                >Blocked&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpBlocked }}</span></span\n            >&nbsp;\n            <div class=\"mt-2\">&nbsp;</div>\n            Filter\n            <input type=\"text\" [(ngModel)]=\"threadDumpFilter\" class=\"form-control\" />\n            <div class=\"pad\" *ngFor=\"let entry of (threadDump | pureFilter: threadDumpFilter:'lockName' | keys)\">\n                <h6>\n                    <span class=\"badge\" [ngClass]=\"getBadgeClass(entry.value.threadState)\">{{ entry.value.threadState }}</span\n                    >&nbsp;{{ entry.value.threadName }}\n                    (ID\n                    {{ entry.value.threadId }})\n                    <a (click)=\"entry.show = !entry.show\" href=\"javascript:void(0);\">\n                        <span [hidden]=\"entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span>\n                        <span [hidden]=\"!entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span>\n                    </a>\n                </h6>\n                <div class=\"card\" [hidden]=\"!entry.show\">\n                    <div class=\"card-body\">\n                        <div *ngFor=\"let st of (entry.value.stackTrace | keys)\" class=\"break\">\n                            <samp\n                                >{{ st.value.className }}.{{ st.value.methodName }}(<code\n                                    >{{ st.value.fileName }}:{{ st.value.lineNumber }}</code\n                                >)</samp\n                            >\n                            <span class=\"mt-1\"></span>\n                        </div>\n                    </div>\n                </div>\n                <table class=\"table table-sm table-responsive\">\n                    <thead>\n                        <tr>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{{ entry.value.blockedTime }}</td>\n                            <td>{{ entry.value.blockedCount }}</td>\n                            <td>{{ entry.value.waitedTime }}</td>\n                            <td>{{ entry.value.waitedCount }}</td>\n                            <td class=\"thread-dump-modal-lock\" title=\"{{ entry.value.lockName }}\">\n                                <code>{{ entry.value.lockName }}</code>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary float-left\" data-dismiss=\"modal\" (click)=\"activeModal.dismiss('closed')\">\n                Done\n            </button>\n        </div>\n    "
            }]
    }], function () { return [{ type: ɵngcc3.NgbActiveModal }]; }, null); })();
    return JhiThreadModalComponent;
}());

var JhiJvmMemoryComponent = /** @class */ (function () {
    function JhiJvmMemoryComponent() {
    }
    __decorate([
        Input()
    ], JhiJvmMemoryComponent.prototype, "jvmMemoryMetrics", void 0);
    __decorate([
        Input()
    ], JhiJvmMemoryComponent.prototype, "updating", void 0);
JhiJvmMemoryComponent.ɵfac = function JhiJvmMemoryComponent_Factory(t) { return new (t || JhiJvmMemoryComponent)(); };
JhiJvmMemoryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiJvmMemoryComponent, selectors: [["jhi-jvm-memory"]], inputs: { jvmMemoryMetrics: "jvmMemoryMetrics", updating: "updating" }, decls: 6, vars: 1, consts: [["jhiTranslate", "metrics.jvm.memory.title"], [4, "ngIf"], [4, "ngFor", "ngForOf"], [4, "ngIf", "ngIfElse"], ["other", ""], ["type", "success", 3, "value", "striped", "animated", 4, "ngIf"], ["type", "success", 3, "value", "striped", "animated"]], template: function JhiJvmMemoryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h4", 0);
        ɵngcc0.ɵɵtext(2, "Memory");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵtemplate(4, JhiJvmMemoryComponent_div_4_Template, 5, 3, "div", 1);
        ɵngcc0.ɵɵtext(5, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
    } }, directives: function () { return [JhiTranslateDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc3.NgbProgressbar]; }, pipes: function () { return [JhiKeysPipe, ɵngcc1.DecimalPipe]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiJvmMemoryComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-jvm-memory',
                template: "\n        <h4 jhiTranslate=\"metrics.jvm.memory.title\">Memory</h4>\n        <div *ngIf=\"!updating\">\n            <div *ngFor=\"let entry of (jvmMemoryMetrics | keys)\">\n                <span *ngIf=\"entry.value.max != -1; else other\">\n                    <span>{{ entry.key }}</span> ({{ entry.value.used / 1048576 | number: '1.0-0' }}M /\n                    {{ entry.value.max / 1048576 | number: '1.0-0' }}M)\n                </span>\n                <div>Committed : {{ entry.value.committed / 1048576 | number: '1.0-0' }}M</div>\n                <ng-template #other\n                    ><span\n                        ><span>{{ entry.key }}</span> {{ entry.value.used / 1048576 | number: '1.0-0' }}M</span\n                    >\n                </ng-template>\n                <ngb-progressbar\n                    *ngIf=\"entry.value.max != -1\"\n                    type=\"success\"\n                    [value]=\"(100 * entry.value.used) / entry.value.max\"\n                    [striped]=\"true\"\n                    [animated]=\"false\"\n                >\n                    <span>{{ (entry.value.used * 100) / entry.value.max | number: '1.0-0' }}%</span>\n                </ngb-progressbar>\n            </div>\n        </div>\n    "
            }]
    }], function () { return []; }, { jvmMemoryMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiJvmMemoryComponent;
}());

var JhiJvmThreadsComponent = /** @class */ (function () {
    function JhiJvmThreadsComponent(modalService) {
        this.modalService = modalService;
    }
    JhiJvmThreadsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.threadStats = {
            threadDumpRunnable: 0,
            threadDumpWaiting: 0,
            threadDumpTimedWaiting: 0,
            threadDumpBlocked: 0,
            threadDumpAll: 0
        };
        this.threadData.forEach(function (value) {
            if (value.threadState === 'RUNNABLE') {
                _this.threadStats.threadDumpRunnable += 1;
            }
            else if (value.threadState === 'WAITING') {
                _this.threadStats.threadDumpWaiting += 1;
            }
            else if (value.threadState === 'TIMED_WAITING') {
                _this.threadStats.threadDumpTimedWaiting += 1;
            }
            else if (value.threadState === 'BLOCKED') {
                _this.threadStats.threadDumpBlocked += 1;
            }
        });
        this.threadStats.threadDumpAll =
            this.threadStats.threadDumpRunnable +
                this.threadStats.threadDumpWaiting +
                this.threadStats.threadDumpTimedWaiting +
                this.threadStats.threadDumpBlocked;
    };
    JhiJvmThreadsComponent.prototype.open = function () {
        var modalRef = this.modalService.open(JhiThreadModalComponent);
        modalRef.componentInstance.threadDump = this.threadData;
    };
    JhiJvmThreadsComponent.ctorParameters = function () { return [
        { type: NgbModal }
    ]; };
    __decorate([
        Input()
    ], JhiJvmThreadsComponent.prototype, "threadData", void 0);
JhiJvmThreadsComponent.ɵfac = function JhiJvmThreadsComponent_Factory(t) { return new (t || JhiJvmThreadsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgbModal)); };
JhiJvmThreadsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiJvmThreadsComponent, selectors: [["jhi-jvm-threads"]], inputs: { threadData: "threadData" }, decls: 61, vars: 37, consts: [["jhiTranslate", "metrics.jvm.threads.title"], ["jhiTranslate", "metrics.jvm.threads.runnable"], ["type", "success", 3, "value", "max", "striped", "animated"], ["jhiTranslate", "metrics.jvm.threads.timedwaiting"], ["type", "warning", 3, "value", "max", "striped", "animated"], ["jhiTranslate", "metrics.jvm.threads.waiting"], ["jhiTranslate", "metrics.jvm.threads.blocked"], ["data-toggle", "modal", "data-target", "#threadDump", 1, "hand", "btn", "btn-primary", "btn-sm", 3, "click"]], template: function JhiJvmThreadsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h4", 0);
        ɵngcc0.ɵɵtext(2, "Threads");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵelementStart(4, "span");
        ɵngcc0.ɵɵelementStart(5, "span", 1);
        ɵngcc0.ɵɵtext(6, "Runnable");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(8, "\n        ");
        ɵngcc0.ɵɵelementStart(9, "ngb-progressbar", 2);
        ɵngcc0.ɵɵtext(10, "\n            ");
        ɵngcc0.ɵɵelementStart(11, "span");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(14, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(15, "\n        ");
        ɵngcc0.ɵɵelementStart(16, "span");
        ɵngcc0.ɵɵelementStart(17, "span", 3);
        ɵngcc0.ɵɵtext(18, "Timed Waiting");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(20, "\n        ");
        ɵngcc0.ɵɵelementStart(21, "ngb-progressbar", 4);
        ɵngcc0.ɵɵtext(22, "\n            ");
        ɵngcc0.ɵɵelementStart(23, "span");
        ɵngcc0.ɵɵtext(24);
        ɵngcc0.ɵɵpipe(25, "number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(26, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(27, "\n        ");
        ɵngcc0.ɵɵelementStart(28, "span");
        ɵngcc0.ɵɵelementStart(29, "span", 5);
        ɵngcc0.ɵɵtext(30, "Waiting");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(31);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(32, "\n        ");
        ɵngcc0.ɵɵelementStart(33, "ngb-progressbar", 4);
        ɵngcc0.ɵɵtext(34, "\n            ");
        ɵngcc0.ɵɵelementStart(35, "span");
        ɵngcc0.ɵɵtext(36);
        ɵngcc0.ɵɵpipe(37, "number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(38, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(39, "\n        ");
        ɵngcc0.ɵɵelementStart(40, "span");
        ɵngcc0.ɵɵelementStart(41, "span", 6);
        ɵngcc0.ɵɵtext(42, "Blocked");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(43);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(44, "\n        ");
        ɵngcc0.ɵɵelementStart(45, "ngb-progressbar", 2);
        ɵngcc0.ɵɵtext(46, "\n            ");
        ɵngcc0.ɵɵelementStart(47, "span");
        ɵngcc0.ɵɵtext(48);
        ɵngcc0.ɵɵpipe(49, "number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(50, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(51, "\n        ");
        ɵngcc0.ɵɵelementStart(52, "div");
        ɵngcc0.ɵɵtext(53);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(54, "\n        ");
        ɵngcc0.ɵɵelementStart(55, "button", 7);
        ɵngcc0.ɵɵlistener("click", function JhiJvmThreadsComponent_Template_button_click_55_listener() { return ctx.open(); });
        ɵngcc0.ɵɵtext(56, "\n            ");
        ɵngcc0.ɵɵelementStart(57, "span");
        ɵngcc0.ɵɵtext(58, "Expand");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(59, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(60, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.threadStats.threadDumpRunnable, "");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.threadStats.threadDumpRunnable)("max", ctx.threadStats.threadDumpAll)("striped", true)("animated", false);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(13, 25, ctx.threadStats.threadDumpRunnable * 100 / ctx.threadStats.threadDumpAll, "1.0-0"), "%");
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate1(" (", ctx.threadStats.threadDumpTimedWaiting, ")");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.threadStats.threadDumpTimedWaiting)("max", ctx.threadStats.threadDumpAll)("striped", true)("animated", false);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(25, 28, ctx.threadStats.threadDumpTimedWaiting * 100 / ctx.threadStats.threadDumpAll, "1.0-0"), "%");
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate1(" (", ctx.threadStats.threadDumpWaiting, ")");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.threadStats.threadDumpWaiting)("max", ctx.threadStats.threadDumpAll)("striped", true)("animated", false);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(37, 31, ctx.threadStats.threadDumpWaiting * 100 / ctx.threadStats.threadDumpAll, "1.0-0"), "%");
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate1(" (", ctx.threadStats.threadDumpBlocked, ")");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.threadStats.threadDumpBlocked)("max", ctx.threadStats.threadDumpAll)("striped", true)("animated", false);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind2(49, 34, ctx.threadStats.threadDumpBlocked * 100 / ctx.threadStats.threadDumpAll, "1.0-0"), "%");
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate1("Total: ", ctx.threadStats.threadDumpAll, "");
    } }, directives: [JhiTranslateDirective, ɵngcc3.NgbProgressbar], pipes: [ɵngcc1.DecimalPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiJvmThreadsComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-jvm-threads',
                template: "\n        <h4 jhiTranslate=\"metrics.jvm.threads.title\">Threads</h4>\n        <span><span jhiTranslate=\"metrics.jvm.threads.runnable\">Runnable</span> {{ threadStats.threadDumpRunnable }}</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpRunnable\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n        >\n            <span>{{ (threadStats.threadDumpRunnable * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <span><span jhiTranslate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{ threadStats.threadDumpTimedWaiting }})</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpTimedWaiting\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"warning\"\n        >\n            <span>{{ (threadStats.threadDumpTimedWaiting * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <span><span jhiTranslate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{ threadStats.threadDumpWaiting }})</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpWaiting\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"warning\"\n        >\n            <span>{{ (threadStats.threadDumpWaiting * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <span><span jhiTranslate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{ threadStats.threadDumpBlocked }})</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpBlocked\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n        >\n            <span>{{ (threadStats.threadDumpBlocked * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <div>Total: {{ threadStats.threadDumpAll }}</div>\n        <button class=\"hand btn btn-primary btn-sm\" (click)=\"open()\" data-toggle=\"modal\" data-target=\"#threadDump\">\n            <span>Expand</span>\n        </button>\n    "
            }]
    }], function () { return [{ type: ɵngcc3.NgbModal }]; }, { threadData: [{
            type: Input
        }] }); })();
    return JhiJvmThreadsComponent;
}());

var JhiMetricsCacheComponent = /** @class */ (function () {
    function JhiMetricsCacheComponent() {
    }
    JhiMetricsCacheComponent.prototype.filterNaN = function (input) {
        if (isNaN(input)) {
            return 0;
        }
        return input;
    };
    __decorate([
        Input()
    ], JhiMetricsCacheComponent.prototype, "cacheMetrics", void 0);
    __decorate([
        Input()
    ], JhiMetricsCacheComponent.prototype, "updating", void 0);
JhiMetricsCacheComponent.ɵfac = function JhiMetricsCacheComponent_Factory(t) { return new (t || JhiMetricsCacheComponent)(); };
JhiMetricsCacheComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiMetricsCacheComponent, selectors: [["jhi-metrics-cache"]], inputs: { cacheMetrics: "cacheMetrics", updating: "updating" }, decls: 6, vars: 1, consts: [["jhiTranslate", "metrics.cache.title"], ["class", "table-responsive", 4, "ngIf"], [1, "table-responsive"], [1, "table", "table-striped"], ["jhiTranslate", "metrics.cache.cachename"], ["data-translate", "metrics.cache.hits", 1, "text-right"], ["data-translate", "metrics.cache.misses", 1, "text-right"], ["data-translate", "metrics.cache.gets", 1, "text-right"], ["data-translate", "metrics.cache.puts", 1, "text-right"], ["data-translate", "metrics.cache.removals", 1, "text-right"], ["data-translate", "metrics.cache.evictions", 1, "text-right"], ["data-translate", "metrics.cache.hitPercent", 1, "text-right"], ["data-translate", "metrics.cache.missPercent", 1, "text-right"], [4, "ngFor", "ngForOf"], [1, "text-right"]], template: function JhiMetricsCacheComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h3", 0);
        ɵngcc0.ɵɵtext(2, "Cache statistics");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵtemplate(4, JhiMetricsCacheComponent_div_4_Template, 44, 3, "div", 1);
        ɵngcc0.ɵɵtext(5, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
    } }, directives: function () { return [JhiTranslateDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf]; }, pipes: function () { return [JhiKeysPipe, ɵngcc1.DecimalPipe]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMetricsCacheComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-metrics-cache',
                template: "\n        <h3 jhiTranslate=\"metrics.cache.title\">Cache statistics</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th jhiTranslate=\"metrics.cache.cachename\">Cache name</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hits\">Cache Hits</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.misses\">Cache Misses</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.gets\">Cache Gets</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.puts\">Cache Puts</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.removals\">Cache Removals</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.evictions\">Cache Evictions</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hitPercent\">Cache Hit %</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.missPercent\">Cache Miss %</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let entry of (cacheMetrics | keys)\">\n                        <td>{{ entry.key }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.puts'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.removals'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.evictions'] }}</td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.hit']) / (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.miss']) /\n                                        (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    "
            }]
    }], function () { return []; }, { cacheMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiMetricsCacheComponent;
}());

var JhiMetricsDatasourceComponent = /** @class */ (function () {
    function JhiMetricsDatasourceComponent() {
    }
    JhiMetricsDatasourceComponent.prototype.filterNaN = function (input) {
        if (isNaN(input)) {
            return 0;
        }
        return input;
    };
    __decorate([
        Input()
    ], JhiMetricsDatasourceComponent.prototype, "datasourceMetrics", void 0);
    __decorate([
        Input()
    ], JhiMetricsDatasourceComponent.prototype, "updating", void 0);
JhiMetricsDatasourceComponent.ɵfac = function JhiMetricsDatasourceComponent_Factory(t) { return new (t || JhiMetricsDatasourceComponent)(); };
JhiMetricsDatasourceComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiMetricsDatasourceComponent, selectors: [["jhi-metrics-datasource"]], inputs: { datasourceMetrics: "datasourceMetrics", updating: "updating" }, decls: 6, vars: 1, consts: [["jhiTranslate", "metrics.datasource.title"], ["class", "table-responsive", 4, "ngIf"], [1, "table-responsive"], [1, "table", "table-striped"], ["jhiTranslate", "metrics.datasource.usage"], ["jhiTranslate", "metrics.datasource.count", 1, "text-right"], ["jhiTranslate", "metrics.datasource.mean", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.min", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p50", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p75", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p95", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p99", 1, "text-right"], ["jhiTranslate", "metrics.datasource.max", 1, "text-right"], [1, "text-right"]], template: function JhiMetricsDatasourceComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h3", 0);
        ɵngcc0.ɵɵtext(2, "DataSource statistics (time in millisecond)");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵtemplate(4, JhiMetricsDatasourceComponent_div_4_Template, 155, 91, "div", 1);
        ɵngcc0.ɵɵtext(5, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
    } }, directives: [JhiTranslateDirective, ɵngcc1.NgIf], pipes: [ɵngcc1.DecimalPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMetricsDatasourceComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-metrics-datasource',
                template: "\n        <h3 jhiTranslate=\"metrics.datasource.title\">DataSource statistics (time in millisecond)</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>\n                            <span jhiTranslate=\"metrics.datasource.usage\">Connection Pool Usage</span> (active:\n                            {{ datasourceMetrics.active.value }}, min: {{ datasourceMetrics.min.value }}, max:\n                            {{ datasourceMetrics.max.value }}, idle: {{ datasourceMetrics.idle.value }})\n                        </th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.datasource.count\">Count</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.datasource.mean\">Mean</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.min\">Min</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p50\">p50</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p75\">p75</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p95\">p95</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p99\">p99</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.datasource.max\">Max</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Acquire</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire.count }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.acquire.mean) | number: '1.0-2' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.0'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.5'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.75'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.95'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.99'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.acquire.max) | number: '1.0-2' }}</td>\n                    </tr>\n                    <tr>\n                        <td>Creation</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation.count }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.creation.mean) | number: '1.0-2' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.0'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.5'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.75'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.95'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.99'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.creation.max) | number: '1.0-2' }}</td>\n                    </tr>\n                    <tr>\n                        <td>Usage</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage.count }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.usage.mean) | number: '1.0-2' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.0'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.5'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.75'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.95'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.99'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.usage.max) | number: '1.0-2' }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    "
            }]
    }], function () { return []; }, { datasourceMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiMetricsDatasourceComponent;
}());

var JhiMetricsEndpointsRequestsComponent = /** @class */ (function () {
    function JhiMetricsEndpointsRequestsComponent() {
    }
    __decorate([
        Input()
    ], JhiMetricsEndpointsRequestsComponent.prototype, "endpointsRequestsMetrics", void 0);
    __decorate([
        Input()
    ], JhiMetricsEndpointsRequestsComponent.prototype, "updating", void 0);
JhiMetricsEndpointsRequestsComponent.ɵfac = function JhiMetricsEndpointsRequestsComponent_Factory(t) { return new (t || JhiMetricsEndpointsRequestsComponent)(); };
JhiMetricsEndpointsRequestsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiMetricsEndpointsRequestsComponent, selectors: [["jhi-metrics-endpoints-requests"]], inputs: { endpointsRequestsMetrics: "endpointsRequestsMetrics", updating: "updating" }, decls: 6, vars: 1, consts: [["class", "table-responsive", 4, "ngIf"], [1, "table-responsive"], [1, "table", "table-striped"], [1, "text-right"], [4, "ngFor", "ngForOf"]], template: function JhiMetricsEndpointsRequestsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h3");
        ɵngcc0.ɵɵtext(2, "Endpoints requests (time in millisecond)");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵtemplate(4, JhiMetricsEndpointsRequestsComponent_div_4_Template, 29, 3, "div", 0);
        ɵngcc0.ɵɵtext(5, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf]; }, pipes: function () { return [JhiKeysPipe, ɵngcc1.DecimalPipe]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMetricsEndpointsRequestsComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-metrics-endpoints-requests',
                template: "\n        <h3>Endpoints requests (time in millisecond)</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Method</th>\n                        <th>Endpoint url</th>\n                        <th class=\"text-right\">Count</th>\n                        <th class=\"text-right\">Mean</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let entry of (endpointsRequestsMetrics | keys)\">\n                        <tr *ngFor=\"let method of (entry.value | keys)\">\n                            <td>{{ method.key }}</td>\n                            <td>{{ entry.key }}</td>\n                            <td class=\"text-right\">{{ method.value.count }}</td>\n                            <td class=\"text-right\">{{ method.value.mean | number: '1.0-3' }}</td>\n                        </tr>\n                    </ng-container>\n                </tbody>\n            </table>\n        </div>\n    "
            }]
    }], function () { return []; }, { endpointsRequestsMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiMetricsEndpointsRequestsComponent;
}());

var JhiMetricsGarbageCollectorComponent = /** @class */ (function () {
    function JhiMetricsGarbageCollectorComponent() {
    }
    __decorate([
        Input()
    ], JhiMetricsGarbageCollectorComponent.prototype, "garbageCollectorMetrics", void 0);
    __decorate([
        Input()
    ], JhiMetricsGarbageCollectorComponent.prototype, "updating", void 0);
JhiMetricsGarbageCollectorComponent.ɵfac = function JhiMetricsGarbageCollectorComponent_Factory(t) { return new (t || JhiMetricsGarbageCollectorComponent)(); };
JhiMetricsGarbageCollectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiMetricsGarbageCollectorComponent, selectors: [["jhi-metrics-garbagecollector"]], inputs: { garbageCollectorMetrics: "garbageCollectorMetrics", updating: "updating" }, decls: 23, vars: 5, consts: [[1, "row"], [1, "col-md-4"], [4, "ngIf"], ["class", "row", 4, "ngIf"], ["class", "table-responsive", 4, "ngIf"], ["type", "success", 3, "max", "value", "striped", "animated"], [1, "col-md-9"], [1, "col-md-3", "text-right"], [1, "table-responsive"], [1, "table", "table-striped"], ["jhiTranslate", "metrics.servicesstats.table.count", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.mean", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.min", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p50", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p75", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p95", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.p99", 1, "text-right"], ["jhiTranslate", "metrics.servicesstats.table.max", 1, "text-right"], [1, "text-right"]], template: function JhiMetricsGarbageCollectorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtext(2, "\n            ");
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵtext(4, "\n                ");
        ɵngcc0.ɵɵtemplate(5, JhiMetricsGarbageCollectorComponent_div_5_Template, 14, 16, "div", 2);
        ɵngcc0.ɵɵtext(6, "\n            ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(7, "\n            ");
        ɵngcc0.ɵɵelementStart(8, "div", 1);
        ɵngcc0.ɵɵtext(9, "\n                ");
        ɵngcc0.ɵɵtemplate(10, JhiMetricsGarbageCollectorComponent_div_10_Template, 14, 16, "div", 2);
        ɵngcc0.ɵɵtext(11, "\n            ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(12, "\n            ");
        ɵngcc0.ɵɵelementStart(13, "div", 1);
        ɵngcc0.ɵɵtext(14, "\n                ");
        ɵngcc0.ɵɵtemplate(15, JhiMetricsGarbageCollectorComponent_div_15_Template, 8, 1, "div", 3);
        ɵngcc0.ɵɵtext(16, "\n                ");
        ɵngcc0.ɵɵtemplate(17, JhiMetricsGarbageCollectorComponent_div_17_Template, 8, 1, "div", 3);
        ɵngcc0.ɵɵtext(18, "\n            ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(19, "\n            ");
        ɵngcc0.ɵɵtemplate(20, JhiMetricsGarbageCollectorComponent_div_20_Template, 77, 29, "div", 4);
        ɵngcc0.ɵɵtext(21, "\n        ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(22, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.garbageCollectorMetrics);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.garbageCollectorMetrics);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.garbageCollectorMetrics);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.garbageCollectorMetrics);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating && ctx.garbageCollectorMetrics);
    } }, directives: [ɵngcc1.NgIf, ɵngcc3.NgbProgressbar, JhiTranslateDirective], pipes: [ɵngcc1.DecimalPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMetricsGarbageCollectorComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-metrics-garbagecollector',
                template: "\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div *ngIf=\"garbageCollectorMetrics\">\n                    <span>\n                        GC Live Data Size/GC Max Data Size ({{\n                            garbageCollectorMetrics['jvm.gc.live.data.size'] / 1048576 | number: '1.0-0'\n                        }}M / {{ garbageCollectorMetrics['jvm.gc.max.data.size'] / 1048576 | number: '1.0-0' }}M)</span\n                    >\n                    <ngb-progressbar\n                        [max]=\"garbageCollectorMetrics['jvm.gc.max.data.size']\"\n                        [value]=\"garbageCollectorMetrics['jvm.gc.live.data.size']\"\n                        [striped]=\"true\"\n                        [animated]=\"false\"\n                        type=\"success\"\n                    >\n                        <span\n                            >{{\n                                (100 * garbageCollectorMetrics['jvm.gc.live.data.size']) / garbageCollectorMetrics['jvm.gc.max.data.size']\n                                    | number: '1.0-2'\n                            }}%</span\n                        >\n                    </ngb-progressbar>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div *ngIf=\"garbageCollectorMetrics\">\n                    <span>\n                        GC Memory Promoted/GC Memory Allocated ({{\n                            garbageCollectorMetrics['jvm.gc.memory.promoted'] / 1048576 | number: '1.0-0'\n                        }}M / {{ garbageCollectorMetrics['jvm.gc.memory.allocated'] / 1048576 | number: '1.0-0' }}M)</span\n                    >\n                    <ngb-progressbar\n                        [max]=\"garbageCollectorMetrics['jvm.gc.memory.allocated']\"\n                        [value]=\"garbageCollectorMetrics['jvm.gc.memory.promoted']\"\n                        [striped]=\"true\"\n                        [animated]=\"false\"\n                        type=\"success\"\n                    >\n                        <span\n                            >{{\n                                (100 * garbageCollectorMetrics['jvm.gc.memory.promoted']) /\n                                    garbageCollectorMetrics['jvm.gc.memory.allocated'] | number: '1.0-2'\n                            }}%</span\n                        >\n                    </ngb-progressbar>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"row\" *ngIf=\"garbageCollectorMetrics\">\n                    <div class=\"col-md-9\">Classes loaded</div>\n                    <div class=\"col-md-3 text-right\">{{ garbageCollectorMetrics.classesLoaded }}</div>\n                </div>\n                <div class=\"row\" *ngIf=\"garbageCollectorMetrics\">\n                    <div class=\"col-md-9\">Classes unloaded</div>\n                    <div class=\"col-md-3 text-right\">{{ garbageCollectorMetrics.classesUnloaded }}</div>\n                </div>\n            </div>\n            <div class=\"table-responsive\" *ngIf=\"!updating && garbageCollectorMetrics\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.count\">Count</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.mean\">Mean</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.min\">Min</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p50\">p50</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p75\">p75</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p95\">p95</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p99\">p99</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.max\">Max</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>jvm.gc.pause</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause'].count }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause'].mean | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.0'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.5'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.75'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.95'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.99'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause'].max | number: '1.0-3' }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    "
            }]
    }], function () { return []; }, { garbageCollectorMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiMetricsGarbageCollectorComponent;
}());

var JhiMetricsHttpRequestComponent = /** @class */ (function () {
    function JhiMetricsHttpRequestComponent() {
    }
    JhiMetricsHttpRequestComponent.prototype.filterNaN = function (input) {
        if (isNaN(input)) {
            return 0;
        }
        return input;
    };
    __decorate([
        Input()
    ], JhiMetricsHttpRequestComponent.prototype, "requestMetrics", void 0);
    __decorate([
        Input()
    ], JhiMetricsHttpRequestComponent.prototype, "updating", void 0);
JhiMetricsHttpRequestComponent.ɵfac = function JhiMetricsHttpRequestComponent_Factory(t) { return new (t || JhiMetricsHttpRequestComponent)(); };
JhiMetricsHttpRequestComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiMetricsHttpRequestComponent, selectors: [["jhi-metrics-request"]], inputs: { requestMetrics: "requestMetrics", updating: "updating" }, decls: 6, vars: 1, consts: [["jhiTranslate", "metrics.jvm.http.title"], ["class", "table table-striped", 4, "ngIf"], [1, "table", "table-striped"], ["jhiTranslate", "metrics.jvm.http.table.code"], ["jhiTranslate", "metrics.jvm.http.table.count"], ["jhiTranslate", "metrics.jvm.http.table.mean", 1, "text-right"], ["jhiTranslate", "metrics.jvm.http.table.max", 1, "text-right"], [4, "ngFor", "ngForOf"], ["type", "success", 3, "max", "value", "striped", "animated"], [1, "text-right"]], template: function JhiMetricsHttpRequestComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h3", 0);
        ɵngcc0.ɵɵtext(2, "HTTP requests (time in millisecond)");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵtemplate(4, JhiMetricsHttpRequestComponent_table_4_Template, 26, 3, "table", 1);
        ɵngcc0.ɵɵtext(5, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
    } }, directives: function () { return [JhiTranslateDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc3.NgbProgressbar]; }, pipes: function () { return [JhiKeysPipe, ɵngcc1.DecimalPipe]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMetricsHttpRequestComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-metrics-request',
                template: "\n        <h3 jhiTranslate=\"metrics.jvm.http.title\">HTTP requests (time in millisecond)</h3>\n        <table class=\"table table-striped\" *ngIf=\"!updating\">\n            <thead>\n                <tr>\n                    <th jhiTranslate=\"metrics.jvm.http.table.code\">Code</th>\n                    <th jhiTranslate=\"metrics.jvm.http.table.count\">Count</th>\n                    <th class=\"text-right\" jhiTranslate=\"metrics.jvm.http.table.mean\">Mean</th>\n                    <th class=\"text-right\" jhiTranslate=\"metrics.jvm.http.table.max\">Max</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let entry of (requestMetrics['percode'] | keys)\">\n                    <td>{{ entry.key }}</td>\n                    <td>\n                        <ngb-progressbar\n                            [max]=\"requestMetrics['all'].count\"\n                            [value]=\"entry.value.count\"\n                            [striped]=\"true\"\n                            [animated]=\"false\"\n                            type=\"success\"\n                        >\n                            <span>{{ entry.value.count }}</span>\n                        </ngb-progressbar>\n                    </td>\n                    <td class=\"text-right\">\n                        {{ filterNaN(entry.value.mean) | number: '1.0-2' }}\n                    </td>\n                    <td class=\"text-right\">{{ entry.value.max | number: '1.0-2' }}</td>\n                </tr>\n            </tbody>\n        </table>\n    "
            }]
    }], function () { return []; }, { requestMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiMetricsHttpRequestComponent;
}());

var JhiMetricsSystemComponent = /** @class */ (function () {
    function JhiMetricsSystemComponent() {
    }
    JhiMetricsSystemComponent.prototype.convertMillisecondsToDuration = function (ms) {
        var times = {
            year: 31557600000,
            month: 2629746000,
            day: 86400000,
            hour: 3600000,
            minute: 60000,
            second: 1000
        };
        var timeString = '';
        for (var key in times) {
            if (Math.floor(ms / times[key]) > 0) {
                var plural = '';
                if (Math.floor(ms / times[key]) > 1) {
                    plural = 's';
                }
                timeString += Math.floor(ms / times[key]).toString() + ' ' + key.toString() + plural + ' ';
                ms = ms - times[key] * Math.floor(ms / times[key]);
            }
        }
        return timeString;
    };
    __decorate([
        Input()
    ], JhiMetricsSystemComponent.prototype, "systemMetrics", void 0);
    __decorate([
        Input()
    ], JhiMetricsSystemComponent.prototype, "updating", void 0);
JhiMetricsSystemComponent.ɵfac = function JhiMetricsSystemComponent_Factory(t) { return new (t || JhiMetricsSystemComponent)(); };
JhiMetricsSystemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JhiMetricsSystemComponent, selectors: [["jhi-metrics-system"]], inputs: { systemMetrics: "systemMetrics", updating: "updating" }, decls: 24, vars: 10, consts: [["class", "row", 4, "ngIf"], ["type", "success", 3, "value", "striped", "animated", 4, "ngIf"], [1, "row"], [1, "col-md-4"], [1, "col-md-8", "text-right"], [1, "col-md-9"], [1, "col-md-3", "text-right"], ["type", "success", 3, "value", "striped", "animated"]], template: function JhiMetricsSystemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0, "\n        ");
        ɵngcc0.ɵɵelementStart(1, "h4");
        ɵngcc0.ɵɵtext(2, "System");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(3, "\n        ");
        ɵngcc0.ɵɵtemplate(4, JhiMetricsSystemComponent_div_4_Template, 8, 1, "div", 0);
        ɵngcc0.ɵɵtext(5, "\n        ");
        ɵngcc0.ɵɵtemplate(6, JhiMetricsSystemComponent_div_6_Template, 9, 4, "div", 0);
        ɵngcc0.ɵɵtext(7, "\n        ");
        ɵngcc0.ɵɵtemplate(8, JhiMetricsSystemComponent_div_8_Template, 9, 4, "div", 0);
        ɵngcc0.ɵɵtext(9, "\n        ");
        ɵngcc0.ɵɵtemplate(10, JhiMetricsSystemComponent_ngb_progressbar_10_Template, 6, 7, "ngb-progressbar", 1);
        ɵngcc0.ɵɵtext(11, "\n        ");
        ɵngcc0.ɵɵtemplate(12, JhiMetricsSystemComponent_div_12_Template, 9, 4, "div", 0);
        ɵngcc0.ɵɵtext(13, "\n        ");
        ɵngcc0.ɵɵtemplate(14, JhiMetricsSystemComponent_ngb_progressbar_14_Template, 6, 7, "ngb-progressbar", 1);
        ɵngcc0.ɵɵtext(15, "\n        ");
        ɵngcc0.ɵɵtemplate(16, JhiMetricsSystemComponent_div_16_Template, 8, 1, "div", 0);
        ɵngcc0.ɵɵtext(17, "\n        ");
        ɵngcc0.ɵɵtemplate(18, JhiMetricsSystemComponent_div_18_Template, 9, 4, "div", 0);
        ɵngcc0.ɵɵtext(19, "\n        ");
        ɵngcc0.ɵɵtemplate(20, JhiMetricsSystemComponent_div_20_Template, 9, 4, "div", 0);
        ɵngcc0.ɵɵtext(21, "\n        ");
        ɵngcc0.ɵɵtemplate(22, JhiMetricsSystemComponent_div_22_Template, 9, 4, "div", 0);
        ɵngcc0.ɵɵtext(23, "\n    ");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.updating);
    } }, directives: [ɵngcc1.NgIf, ɵngcc3.NgbProgressbar], pipes: [ɵngcc1.DatePipe, ɵngcc1.DecimalPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiMetricsSystemComponent, [{
        type: Component,
        args: [{
                selector: 'jhi-metrics-system',
                template: "\n        <h4>System</h4>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-4\">Uptime</div>\n            <div class=\"col-md-8 text-right\">{{ convertMillisecondsToDuration(systemMetrics['process.uptime']) }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-4\">Start time</div>\n            <div class=\"col-md-8 text-right\">{{ systemMetrics['process.start.time'] | date: 'full' }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">Process CPU usage</div>\n            <div class=\"col-md-3 text-right\">{{ 100 * systemMetrics['process.cpu.usage'] | number: '1.0-2' }} %</div>\n        </div>\n        <ngb-progressbar\n            [value]=\"100 * systemMetrics['process.cpu.usage']\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n            *ngIf=\"!updating\"\n        >\n            <span>{{ 100 * systemMetrics['process.cpu.usage'] | number: '1.0-2' }} %</span>\n        </ngb-progressbar>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">System CPU usage</div>\n            <div class=\"col-md-3 text-right\">{{ 100 * systemMetrics['system.cpu.usage'] | number: '1.0-2' }} %</div>\n        </div>\n        <ngb-progressbar\n            [value]=\"100 * systemMetrics['system.cpu.usage']\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n            *ngIf=\"!updating\"\n        >\n            <span>{{ 100 * systemMetrics['system.cpu.usage'] | number: '1.0-2' }} %</span>\n        </ngb-progressbar>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">System CPU count</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['system.cpu.count'] }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">System 1m Load average</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['system.load.average.1m'] | number: '1.0-2' }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">Process files max</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['process.files.max'] | number: '1.0-0' }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">Process files open</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['process.files.open'] | number: '1.0-0' }}</div>\n        </div>\n    "
            }]
    }], function () { return []; }, { systemMetrics: [{
            type: Input
        }], updating: [{
            type: Input
        }] }); })();
    return JhiMetricsSystemComponent;
}());

var JhiCapitalizePipe = /** @class */ (function () {
    function JhiCapitalizePipe() {
    }
    JhiCapitalizePipe.prototype.transform = function (input) {
        if (input !== null) {
            input = input.toLowerCase();
        }
        return input.substring(0, 1).toUpperCase() + input.substring(1);
    };
JhiCapitalizePipe.ɵfac = function JhiCapitalizePipe_Factory(t) { return new (t || JhiCapitalizePipe)(); };
JhiCapitalizePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "capitalize", type: JhiCapitalizePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiCapitalizePipe, [{
        type: Pipe,
        args: [{ name: 'capitalize' }]
    }], function () { return []; }, null); })();
    return JhiCapitalizePipe;
}());

var JhiFilterPipe = /** @class */ (function () {
    function JhiFilterPipe() {
    }
    JhiFilterPipe.prototype.transform = function (input, filter, field) {
        if (typeof filter === 'undefined' || filter === '') {
            return input;
        }
        // if filter is of type 'function' compute current value of filter, otherwise return filter
        var currentFilter = typeof filter === 'function' ? filter() : filter;
        if (typeof currentFilter === 'number') {
            return input.filter(this.filterByNumber(currentFilter, field));
        }
        if (typeof currentFilter === 'boolean') {
            return input.filter(this.filterByBoolean(currentFilter, field));
        }
        if (typeof currentFilter === 'string') {
            return input.filter(this.filterByString(currentFilter, field));
        }
        if (typeof currentFilter === 'object') {
            // filter by object ignores 'field' if specified
            return input.filter(this.filterByObject(currentFilter));
        }
        // 'symbol' && 'undefined'
        return input.filter(this.filterDefault(currentFilter, field));
    };
    JhiFilterPipe.prototype.filterByNumber = function (filter, field) {
        return function (value) {
            return (value && !filter) || (typeof value === 'object' && field)
                ? value[field] && typeof value[field] === 'number' && value[field] === filter
                : typeof value === 'number' && value === filter;
        };
    };
    JhiFilterPipe.prototype.filterByBoolean = function (filter, field) {
        return function (value) {
            return typeof value === 'object' && field
                ? value[field] && typeof value[field] === 'boolean' && value[field] === filter
                : typeof value === 'boolean' && value === filter;
        };
    };
    JhiFilterPipe.prototype.filterByString = function (filter, field) {
        return function (value) {
            return (value && !filter) || (typeof value === 'object' && field)
                ? value[field] && typeof value[field] === 'string' && value[field].toLowerCase().includes(filter.toLowerCase())
                : typeof value === 'string' && value.toLowerCase().includes(filter.toLowerCase());
        };
    };
    JhiFilterPipe.prototype.filterDefault = function (filter, field) {
        return function (value) { return ((value && !filter) || (typeof value === 'object' && field) ? value[field] && filter === value : filter === value); };
    };
    JhiFilterPipe.prototype.filterByObject = function (filter) {
        var _this = this;
        return function (value) {
            var e_1, _a;
            var keys = Object.keys(filter);
            var isMatching = false;
            try {
                // all fields defined in filter object must match
                for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
                    var key = keys_1_1.value;
                    if (typeof filter[key] === 'number') {
                        isMatching = _this.filterByNumber(filter[key])(value[key]);
                    }
                    else if (typeof filter[key] === 'boolean') {
                        isMatching = _this.filterByBoolean(filter[key])(value[key]);
                    }
                    else if (typeof filter[key] === 'string') {
                        isMatching = _this.filterByString(filter[key])(value[key]);
                    }
                    else {
                        isMatching = _this.filterDefault(filter[key])(value[key]);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return isMatching;
        };
    };
JhiFilterPipe.ɵfac = function JhiFilterPipe_Factory(t) { return new (t || JhiFilterPipe)(); };
JhiFilterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "filter", type: JhiFilterPipe, pure: false });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiFilterPipe, [{
        type: Pipe,
        args: [{ name: 'filter', pure: false }]
    }], function () { return []; }, null); })();
    return JhiFilterPipe;
}());

var JhiKeysPipe = /** @class */ (function () {
    function JhiKeysPipe() {
    }
    JhiKeysPipe.prototype.transform = function (value) {
        var e_1, _a;
        var keys = [];
        var valueKeys = Object.keys(value);
        try {
            for (var valueKeys_1 = __values(valueKeys), valueKeys_1_1 = valueKeys_1.next(); !valueKeys_1_1.done; valueKeys_1_1 = valueKeys_1.next()) {
                var key = valueKeys_1_1.value;
                keys.push({ key: key, value: value[key] });
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (valueKeys_1_1 && !valueKeys_1_1.done && (_a = valueKeys_1.return)) _a.call(valueKeys_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return keys;
    };
JhiKeysPipe.ɵfac = function JhiKeysPipe_Factory(t) { return new (t || JhiKeysPipe)(); };
JhiKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "keys", type: JhiKeysPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiKeysPipe, [{
        type: Pipe,
        args: [{ name: 'keys' }]
    }], function () { return []; }, null); })();
    return JhiKeysPipe;
}());

var JhiOrderByPipe = /** @class */ (function () {
    function JhiOrderByPipe() {
    }
    JhiOrderByPipe.prototype.transform = function (values, predicate, reverse) {
        if (predicate === void 0) { predicate = ''; }
        if (reverse === void 0) { reverse = false; }
        if (predicate === '') {
            return reverse ? values.sort().reverse() : values.sort();
        }
        return values.sort(function (a, b) {
            if (a[predicate] < b[predicate]) {
                return reverse ? 1 : -1;
            }
            else if (b[predicate] < a[predicate]) {
                return reverse ? -1 : 1;
            }
            return 0;
        });
    };
JhiOrderByPipe.ɵfac = function JhiOrderByPipe_Factory(t) { return new (t || JhiOrderByPipe)(); };
JhiOrderByPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "orderBy", type: JhiOrderByPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiOrderByPipe, [{
        type: Pipe,
        args: [{ name: 'orderBy' }]
    }], function () { return []; }, null); })();
    return JhiOrderByPipe;
}());

var JhiPureFilterPipe = /** @class */ (function (_super) {
    __extends(JhiPureFilterPipe, _super);
    function JhiPureFilterPipe() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    JhiPureFilterPipe.prototype.transform = function (input, filter, field) {
        return _super.prototype.transform.call(this, input, filter, field);
    };
JhiPureFilterPipe.ɵfac = function JhiPureFilterPipe_Factory(t) { return ɵJhiPureFilterPipe_BaseFactory(t || JhiPureFilterPipe); };
JhiPureFilterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "pureFilter", type: JhiPureFilterPipe, pure: true });
var ɵJhiPureFilterPipe_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(JhiPureFilterPipe);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiPureFilterPipe, [{
        type: Pipe,
        args: [{ name: 'pureFilter' }]
    }], null, null); })();
    return JhiPureFilterPipe;
}(JhiFilterPipe));

var JhiTruncateCharactersPipe = /** @class */ (function () {
    function JhiTruncateCharactersPipe() {
    }
    JhiTruncateCharactersPipe.prototype.transform = function (input, chars, breakOnWord) {
        if (isNaN(chars)) {
            return input;
        }
        if (chars <= 0) {
            return '';
        }
        if (input && input.length > chars) {
            input = input.substring(0, chars);
            if (!breakOnWord) {
                var lastspace = input.lastIndexOf(' ');
                // Get last space
                if (lastspace !== -1) {
                    input = input.substr(0, lastspace);
                }
            }
            else {
                while (input.endsWith(' ')) {
                    input = input.substr(0, input.length - 1);
                }
            }
            return input + '...';
        }
        return input;
    };
JhiTruncateCharactersPipe.ɵfac = function JhiTruncateCharactersPipe_Factory(t) { return new (t || JhiTruncateCharactersPipe)(); };
JhiTruncateCharactersPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "truncateCharacters", type: JhiTruncateCharactersPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiTruncateCharactersPipe, [{
        type: Pipe,
        args: [{ name: 'truncateCharacters' }]
    }], function () { return []; }, null); })();
    return JhiTruncateCharactersPipe;
}());

var JhiTruncateWordsPipe = /** @class */ (function () {
    function JhiTruncateWordsPipe() {
    }
    JhiTruncateWordsPipe.prototype.transform = function (input, words) {
        if (isNaN(words)) {
            return input;
        }
        if (words <= 0) {
            return '';
        }
        if (input) {
            var inputWords = input.split(/\s+/);
            if (inputWords.length > words) {
                input = inputWords.slice(0, words).join(' ') + '...';
            }
        }
        return input;
    };
JhiTruncateWordsPipe.ɵfac = function JhiTruncateWordsPipe_Factory(t) { return new (t || JhiTruncateWordsPipe)(); };
JhiTruncateWordsPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "truncateWords", type: JhiTruncateWordsPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiTruncateWordsPipe, [{
        type: Pipe,
        args: [{ name: 'truncateWords' }]
    }], function () { return []; }, null); })();
    return JhiTruncateWordsPipe;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
var JHI_PIPES = [
    JhiCapitalizePipe,
    JhiFilterPipe,
    JhiKeysPipe,
    JhiOrderByPipe,
    JhiPureFilterPipe,
    JhiTruncateCharactersPipe,
    JhiTruncateWordsPipe
];
var JHI_DIRECTIVES = [
    JhiMaxValidatorDirective,
    JhiMinValidatorDirective,
    JhiMaxbytesValidatorDirective,
    JhiMinbytesValidatorDirective,
    JhiSortDirective,
    JhiSortByDirective
];
var JHI_COMPONENTS = [
    JhiItemCountComponent,
    JhiBooleanComponent,
    JhiJvmMemoryComponent,
    JhiJvmThreadsComponent,
    JhiMetricsHttpRequestComponent,
    JhiMetricsEndpointsRequestsComponent,
    JhiMetricsCacheComponent,
    JhiMetricsDatasourceComponent,
    JhiMetricsSystemComponent,
    JhiMetricsGarbageCollectorComponent,
    JhiThreadModalComponent
];

function translatePartialLoader(http) {
    return new TranslateHttpLoader(http, 'i18n/', ".json?buildTimestamp=" + process.env.BUILD_TIMESTAMP);
}
function missingTranslationHandler(configService) {
    return new JhiMissingTranslationHandler(configService);
}
var NgJhipsterModule = /** @class */ (function () {
    function NgJhipsterModule() {
    }
    NgJhipsterModule_1 = NgJhipsterModule;
    NgJhipsterModule.forRoot = function (moduleConfig) {
        return {
            ngModule: NgJhipsterModule_1,
            providers: [{ provide: JhiModuleConfig, useValue: moduleConfig }]
        };
    };
    var NgJhipsterModule_1;
NgJhipsterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgJhipsterModule });
NgJhipsterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgJhipsterModule_Factory(t) { return new (t || NgJhipsterModule)(); }, imports: [[CommonModule, NgbModule, FormsModule],
        CommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgJhipsterModule, { declarations: function () { return [JhiCapitalizePipe,
        JhiFilterPipe,
        JhiKeysPipe,
        JhiOrderByPipe,
        JhiPureFilterPipe,
        JhiTruncateCharactersPipe,
        JhiTruncateWordsPipe,
        JhiMaxValidatorDirective,
        JhiMinValidatorDirective,
        JhiMaxbytesValidatorDirective,
        JhiMinbytesValidatorDirective,
        JhiSortDirective,
        JhiSortByDirective,
        JhiItemCountComponent,
        JhiBooleanComponent,
        JhiJvmMemoryComponent,
        JhiJvmThreadsComponent,
        JhiMetricsHttpRequestComponent,
        JhiMetricsEndpointsRequestsComponent,
        JhiMetricsCacheComponent,
        JhiMetricsDatasourceComponent,
        JhiMetricsSystemComponent,
        JhiMetricsGarbageCollectorComponent,
        JhiThreadModalComponent,
        JhiTranslateDirective]; }, imports: function () { return [CommonModule, NgbModule, FormsModule]; }, exports: function () { return [JhiCapitalizePipe,
        JhiFilterPipe,
        JhiKeysPipe,
        JhiOrderByPipe,
        JhiPureFilterPipe,
        JhiTruncateCharactersPipe,
        JhiTruncateWordsPipe,
        JhiMaxValidatorDirective,
        JhiMinValidatorDirective,
        JhiMaxbytesValidatorDirective,
        JhiMinbytesValidatorDirective,
        JhiSortDirective,
        JhiSortByDirective,
        JhiItemCountComponent,
        JhiBooleanComponent,
        JhiJvmMemoryComponent,
        JhiJvmThreadsComponent,
        JhiMetricsHttpRequestComponent,
        JhiMetricsEndpointsRequestsComponent,
        JhiMetricsCacheComponent,
        JhiMetricsDatasourceComponent,
        JhiMetricsSystemComponent,
        JhiMetricsGarbageCollectorComponent,
        JhiThreadModalComponent,
        JhiTranslateDirective,
        CommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgJhipsterModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, NgbModule, FormsModule],
                declarations: __spread(JHI_PIPES, JHI_DIRECTIVES, JHI_COMPONENTS, [JhiTranslateDirective]),
                entryComponents: [JhiThreadModalComponent],
                exports: __spread(JHI_PIPES, JHI_DIRECTIVES, JHI_COMPONENTS, [JhiTranslateDirective, CommonModule])
            }]
    }], function () { return []; }, null); })();
    return NgJhipsterModule;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * An utility service for pagination
 */
var JhiPaginationUtil = /** @class */ (function () {
    function JhiPaginationUtil() {
    }
    /**
     * Method to find whether the sort is defined
     */
    JhiPaginationUtil.prototype.parseAscending = function (sort) {
        var sortArray = sort.split(',');
        sortArray = sortArray.length > 1 ? sortArray : sort.split('%2C');
        if (sortArray.length > 1) {
            return sortArray.slice(-1)[0] === 'asc';
        }
        // default to true if no sort is defined
        return true;
    };
    /**
     * Method to query params are strings, and need to be parsed
     */
    JhiPaginationUtil.prototype.parsePage = function (page) {
        return parseInt(page, 10);
    };
    /**
     * Method to sort can be in the format `id,asc` or `id`
     */
    JhiPaginationUtil.prototype.parsePredicate = function (sort) {
        return sort.split(',')[0].split('%2C')[0];
    };
    JhiPaginationUtil.ɵprov = ɵɵdefineInjectable({ factory: function JhiPaginationUtil_Factory() { return new JhiPaginationUtil(); }, token: JhiPaginationUtil, providedIn: "root" });
JhiPaginationUtil.ɵfac = function JhiPaginationUtil_Factory(t) { return new (t || JhiPaginationUtil)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiPaginationUtil, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiPaginationUtil;
}());

/**
 * An utility service for link parsing.
 */
var JhiParseLinks = /** @class */ (function () {
    function JhiParseLinks() {
    }
    /**
     * Method to parse the links
     */
    JhiParseLinks.prototype.parse = function (header) {
        if (header.length === 0) {
            throw new Error('input must not be of zero length');
        }
        // Split parts by comma
        var parts = header.split(',');
        var links = {};
        // Parse each part into a named link
        parts.forEach(function (p) {
            var section = p.split(';');
            if (section.length !== 2) {
                throw new Error('section could not be split on ";"');
            }
            var url = section[0].replace(/<(.*)>/, '$1').trim();
            var queryString = {};
            url.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function ($0, $1, $2, $3) { return (queryString[$1] = $3); });
            var page = queryString.page;
            if (typeof page === 'string') {
                page = parseInt(page, 10);
            }
            var name = section[1].replace(/rel="(.*)"/, '$1').trim();
            links[name] = page;
        });
        return links;
    };
    JhiParseLinks.ɵprov = ɵɵdefineInjectable({ factory: function JhiParseLinks_Factory() { return new JhiParseLinks(); }, token: JhiParseLinks, providedIn: "root" });
JhiParseLinks.ɵfac = function JhiParseLinks_Factory(t) { return new (t || JhiParseLinks)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiParseLinks, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiParseLinks;
}());

/**
 * An utility service for data.
 */
var JhiDataUtils = /** @class */ (function () {
    function JhiDataUtils() {
    }
    /**
     * Method to abbreviate the text given
     */
    JhiDataUtils.prototype.abbreviate = function (text, append) {
        if (append === void 0) { append = '...'; }
        if (text.length < 30) {
            return text;
        }
        return text ? text.substring(0, 15) + append + text.slice(-10) : '';
    };
    /**
     * Method to find the byte size of the string provides
     */
    JhiDataUtils.prototype.byteSize = function (base64String) {
        return this.formatAsBytes(this.size(base64String));
    };
    /**
     * Method to open file
     */
    JhiDataUtils.prototype.openFile = function (contentType, data) {
        if (window.navigator && window.navigator.msSaveOrOpenBlob) {
            // To support IE and Edge
            var byteCharacters = atob(data);
            var byteNumbers = new Array(byteCharacters.length);
            for (var i = 0; i < byteCharacters.length; i++) {
                byteNumbers[i] = byteCharacters.charCodeAt(i);
            }
            var byteArray = new Uint8Array(byteNumbers);
            var blob = new Blob([byteArray], {
                type: contentType
            });
            window.navigator.msSaveOrOpenBlob(blob);
        }
        else {
            // Other browsers
            var fileURL = "data:" + contentType + ";base64," + data;
            var win = window.open();
            win.document.write('<iframe src="' +
                fileURL +
                '" frameborder="0" style="border:0; top:0; left:0; bottom:0; right:0; width:100%; height:100%;" allowfullscreen></iframe>');
        }
    };
    /**
     * Method to convert the file to base64
     */
    JhiDataUtils.prototype.toBase64 = function (file, cb) {
        var fileReader = new FileReader();
        fileReader.onload = function (e) {
            var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);
            cb(base64Data);
        };
        fileReader.readAsDataURL(file);
    };
    /**
     * Method to clear the input
     */
    JhiDataUtils.prototype.clearInputImage = function (entity, elementRef, field, fieldContentType, idInput) {
        if (entity && field && fieldContentType) {
            if (Object.prototype.hasOwnProperty.call(entity, field)) {
                entity[field] = null;
            }
            if (Object.prototype.hasOwnProperty.call(entity, fieldContentType)) {
                entity[fieldContentType] = null;
            }
            if (elementRef && idInput && elementRef.nativeElement.querySelector('#' + idInput)) {
                elementRef.nativeElement.querySelector('#' + idInput).value = null;
            }
        }
    };
    /**
     * Sets the base 64 data & file type of the 1st file on the event (event.target.files[0]) in the passed entity object
     * and returns a promise.
     *
     * @param event the object containing the file (at event.target.files[0])
     * @param entity the object to set the file's 'base 64 data' and 'file type' on
     * @param field the field name to set the file's 'base 64 data' on
     * @param isImage boolean representing if the file represented by the event is an image
     * @returns a promise that resolves to the modified entity if operation is successful, otherwise rejects with an error message
     */
    JhiDataUtils.prototype.setFileData = function (event, entity, field, isImage) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (event && event.target && event.target.files && event.target.files[0]) {
                var file_1 = event.target.files[0];
                if (isImage && !file_1.type.startsWith('image/')) {
                    reject("File was expected to be an image but was found to be " + file_1.type);
                }
                else {
                    _this.toBase64(file_1, function (base64Data) {
                        entity[field] = base64Data;
                        entity[field + "ContentType"] = file_1.type;
                        resolve(entity);
                    });
                }
            }
            else {
                reject("Base64 data was not set as file could not be extracted from passed parameter: " + event);
            }
        });
    };
    /**
     * Sets the base 64 data & file type of the 1st file on the event (event.target.files[0]) in the passed entity object
     * and returns an observable.
     *
     * @param event the object containing the file (at event.target.files[0])
     * @param editForm the form group where the input field is located
     * @param field the field name to set the file's 'base 64 data' on
     * @param isImage boolean representing if the file represented by the event is an image
     * @returns an observable that loads file to form field and completes if sussessful
     *          or returns error as JhiFileLoadError on failure
     */
    JhiDataUtils.prototype.loadFileToForm = function (event, editForm, field, isImage) {
        var _this = this;
        return new Observable(function (observer) {
            var eventTarget = event.target;
            if (eventTarget.files && eventTarget.files[0]) {
                var file_2 = eventTarget.files[0];
                if (isImage && !file_2.type.startsWith('image/')) {
                    var error = {
                        message: "File was expected to be an image but was found to be '" + file_2.type + "'",
                        key: 'not.image',
                        params: { fileType: file_2.type }
                    };
                    observer.error(error);
                }
                else {
                    var fieldContentType_1 = field + 'ContentType';
                    _this.toBase64(file_2, function (base64Data) {
                        var _a;
                        editForm.patchValue((_a = {},
                            _a[field] = base64Data,
                            _a[fieldContentType_1] = file_2.type,
                            _a));
                        observer.next();
                        observer.complete();
                    });
                }
            }
            else {
                var error = {
                    message: 'Could not extract file',
                    key: 'could.not.extract',
                    params: { event: event }
                };
                observer.error(error);
            }
        });
    };
    /**
     * Method to download file
     */
    JhiDataUtils.prototype.downloadFile = function (contentType, data, fileName) {
        var byteCharacters = atob(data);
        var byteNumbers = new Array(byteCharacters.length);
        for (var i = 0; i < byteCharacters.length; i++) {
            byteNumbers[i] = byteCharacters.charCodeAt(i);
        }
        var byteArray = new Uint8Array(byteNumbers);
        var blob = new Blob([byteArray], {
            type: contentType
        });
        var tempLink = document.createElement('a');
        tempLink.href = window.URL.createObjectURL(blob);
        tempLink.download = fileName;
        tempLink.target = '_blank';
        tempLink.click();
    };
    JhiDataUtils.prototype.endsWith = function (suffix, str) {
        return str.includes(suffix, str.length - suffix.length);
    };
    JhiDataUtils.prototype.paddingSize = function (value) {
        if (this.endsWith('==', value)) {
            return 2;
        }
        if (this.endsWith('=', value)) {
            return 1;
        }
        return 0;
    };
    JhiDataUtils.prototype.size = function (value) {
        return (value.length / 4) * 3 - this.paddingSize(value);
    };
    JhiDataUtils.prototype.formatAsBytes = function (size) {
        return size.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ') + ' bytes';
    };
    JhiDataUtils.ɵprov = ɵɵdefineInjectable({ factory: function JhiDataUtils_Factory() { return new JhiDataUtils(); }, token: JhiDataUtils, providedIn: "root" });
JhiDataUtils.ɵfac = function JhiDataUtils_Factory(t) { return new (t || JhiDataUtils)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiDataUtils, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiDataUtils;
}());

/**
 * An utility service for date.
 */
var JhiDateUtils = /** @class */ (function () {
    function JhiDateUtils() {
        this.pattern = 'yyyy-MM-dd';
        this.datePipe = new DatePipe('en');
    }
    /**
     * Method to convert the date time from server into JS date object
     */
    JhiDateUtils.prototype.convertDateTimeFromServer = function (date) {
        if (date) {
            return new Date(date);
        }
        else {
            return null;
        }
    };
    /**
     * Method to convert the date from server into JS date object
     */
    JhiDateUtils.prototype.convertLocalDateFromServer = function (date) {
        if (date) {
            var dateString = date.split('-');
            return new Date(dateString[0], dateString[1] - 1, dateString[2]);
        }
        return null;
    };
    /**
     * Method to convert the JS date object into specified date pattern
     */
    JhiDateUtils.prototype.convertLocalDateToServer = function (date, pattern) {
        if (pattern === void 0) { pattern = this.pattern; }
        if (date) {
            var newDate = new Date(date.year, date.month - 1, date.day);
            return this.datePipe.transform(newDate, pattern);
        }
        else {
            return null;
        }
    };
    /**
     * Method to get the default date pattern
     */
    JhiDateUtils.prototype.dateformat = function () {
        return this.pattern;
    };
    // TODO Change this method when moving from datetime-local input to NgbDatePicker
    JhiDateUtils.prototype.toDate = function (date) {
        if (date === undefined || date === null) {
            return null;
        }
        var dateParts = date.split(/\D+/);
        if (dateParts.length === 7) {
            return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], dateParts[3], dateParts[4], dateParts[5], dateParts[6]);
        }
        if (dateParts.length === 6) {
            return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], dateParts[3], dateParts[4], dateParts[5]);
        }
        return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], dateParts[3], dateParts[4]);
    };
    JhiDateUtils.ɵprov = ɵɵdefineInjectable({ factory: function JhiDateUtils_Factory() { return new JhiDateUtils(); }, token: JhiDateUtils, providedIn: "root" });
JhiDateUtils.ɵfac = function JhiDateUtils_Factory(t) { return new (t || JhiDateUtils)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiDateUtils, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiDateUtils;
}());

/**
 * An utility class to manage RX events
 */
var JhiEventManager = /** @class */ (function () {
    function JhiEventManager() {
        var _this = this;
        this.observable = Observable.create(function (observer) {
            _this.observer = observer;
        }).pipe(share());
    }
    /**
     * Method to broadcast the event to observer
     */
    JhiEventManager.prototype.broadcast = function (event) {
        if (this.observer) {
            this.observer.next(event);
        }
    };
    /**
     * Method to subscribe to an event with callback
     */
    JhiEventManager.prototype.subscribe = function (eventName, callback) {
        var subscriber = this.observable
            .pipe(filter(function (event) {
            if (typeof event === 'string') {
                return event === eventName;
            }
            return event.name === eventName;
        }), map(function (event) {
            if (typeof event !== 'string') {
                // when releasing generator-jhipster v7 then current return will be changed to
                // (to avoid redundant code response.content in JhiEventManager.subscribe callbacks):
                // return event.content;
                return event;
            }
        }))
            .subscribe(callback);
        return subscriber;
    };
    /**
     * Method to unsubscribe the subscription
     */
    JhiEventManager.prototype.destroy = function (subscriber) {
        subscriber.unsubscribe();
    };
    JhiEventManager.ɵprov = ɵɵdefineInjectable({ factory: function JhiEventManager_Factory() { return new JhiEventManager(); }, token: JhiEventManager, providedIn: "root" });
JhiEventManager.ɵfac = function JhiEventManager_Factory(t) { return new (t || JhiEventManager)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiEventManager, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiEventManager;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
var JhiEventWithContent = /** @class */ (function () {
    function JhiEventWithContent(name, content) {
        this.name = name;
        this.content = content;
    }
    return JhiEventWithContent;
}());

var JhiAlertService = /** @class */ (function () {
    function JhiAlertService(sanitizer, configService, translateService) {
        this.sanitizer = sanitizer;
        this.configService = configService;
        this.translateService = translateService;
        var config = this.configService.getConfig();
        this.toast = config.alertAsToast;
        this.i18nEnabled = config.i18nEnabled;
        this.alertId = 0; // unique id for each alert. Starts from 0.
        this.alerts = [];
        this.timeout = config.alertTimeout;
    }
    JhiAlertService.prototype.clear = function () {
        this.alerts.splice(0, this.alerts.length);
    };
    JhiAlertService.prototype.get = function () {
        return this.alerts;
    };
    JhiAlertService.prototype.success = function (msg, params, position) {
        return this.addAlert({
            type: 'success',
            msg: msg,
            params: params,
            timeout: this.timeout,
            toast: this.isToast(),
            position: position
        }, []);
    };
    JhiAlertService.prototype.error = function (msg, params, position) {
        return this.addAlert({
            type: 'danger',
            msg: msg,
            params: params,
            timeout: this.timeout,
            toast: this.isToast(),
            position: position
        }, []);
    };
    JhiAlertService.prototype.warning = function (msg, params, position) {
        return this.addAlert({
            type: 'warning',
            msg: msg,
            params: params,
            timeout: this.timeout,
            toast: this.isToast(),
            position: position
        }, []);
    };
    JhiAlertService.prototype.info = function (msg, params, position) {
        return this.addAlert({
            type: 'info',
            msg: msg,
            params: params,
            timeout: this.timeout,
            toast: this.isToast(),
            position: position
        }, []);
    };
    JhiAlertService.prototype.addAlert = function (alertOptions, extAlerts) {
        var _this = this;
        alertOptions.id = this.alertId++;
        if (this.i18nEnabled && alertOptions.msg) {
            alertOptions.msg = this.translateService.instant(alertOptions.msg, alertOptions.params);
        }
        var alert = this.factory(alertOptions);
        if (alertOptions.timeout && alertOptions.timeout > 0) {
            setTimeout(function () {
                _this.closeAlert(alertOptions.id, extAlerts);
            }, alertOptions.timeout);
        }
        return alert;
    };
    JhiAlertService.prototype.closeAlert = function (id, extAlerts) {
        var thisAlerts = extAlerts && extAlerts.length > 0 ? extAlerts : this.alerts;
        return this.closeAlertByIndex(thisAlerts.map(function (e) { return e.id; }).indexOf(id), thisAlerts);
    };
    JhiAlertService.prototype.closeAlertByIndex = function (index, thisAlerts) {
        return thisAlerts.splice(index, 1);
    };
    JhiAlertService.prototype.isToast = function () {
        return this.toast;
    };
    JhiAlertService.prototype.factory = function (alertOptions) {
        var _this = this;
        var alert = {
            type: alertOptions.type,
            msg: this.sanitizer.sanitize(SecurityContext.HTML, alertOptions.msg),
            id: alertOptions.id,
            timeout: alertOptions.timeout,
            toast: alertOptions.toast,
            position: alertOptions.position ? alertOptions.position : 'top right',
            scoped: alertOptions.scoped,
            close: function (alerts) {
                return _this.closeAlert(alertOptions.id, alerts);
            }
        };
        if (!alert.scoped) {
            this.alerts.push(alert);
        }
        return alert;
    };
    JhiAlertService.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: JhiConfigService },
        { type: TranslateService, decorators: [{ type: Optional }] }
    ]; };
    JhiAlertService.ɵprov = ɵɵdefineInjectable({ factory: function JhiAlertService_Factory() { return new JhiAlertService(ɵɵinject(DomSanitizer), ɵɵinject(JhiConfigService), ɵɵinject(TranslateService, 8)); }, token: JhiAlertService, providedIn: "root" });
    JhiAlertService = __decorate([ __param(2, Optional())
    ], JhiAlertService);
JhiAlertService.ɵfac = function JhiAlertService_Factory(t) { return new (t || JhiAlertService)(ɵngcc0.ɵɵinject(ɵngcc5.DomSanitizer), ɵngcc0.ɵɵinject(JhiConfigService), ɵngcc0.ɵɵinject(ɵngcc2.TranslateService, 8)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiAlertService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc5.DomSanitizer }, { type: JhiConfigService }, { type: ɵngcc2.TranslateService, decorators: [{
                type: Optional
            }] }]; }, null); })();
    return JhiAlertService;
}());

var JhiBase64Service = /** @class */ (function () {
    function JhiBase64Service() {
        this.keyStr = 'ABCDEFGHIJKLMNOP' + 'QRSTUVWXYZabcdef' + 'ghijklmnopqrstuv' + 'wxyz0123456789+/' + '=';
    }
    JhiBase64Service.prototype.encode = function (input) {
        var output = '';
        var enc1 = '';
        var enc2 = '';
        var enc3 = '';
        var enc4 = '';
        var chr1 = '';
        var chr2 = '';
        var chr3 = '';
        var i = 0;
        while (i < input.length) {
            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);
            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;
            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            }
            else if (isNaN(chr3)) {
                enc4 = 64;
            }
            output = output + this.keyStr.charAt(enc1) + this.keyStr.charAt(enc2) + this.keyStr.charAt(enc3) + this.keyStr.charAt(enc4);
            chr1 = chr2 = chr3 = '';
            enc1 = enc2 = enc3 = enc4 = '';
        }
        return output;
    };
    JhiBase64Service.prototype.decode = function (input) {
        var output = '';
        var enc1 = '';
        var enc2 = '';
        var enc3 = '';
        var enc4 = '';
        var chr1 = '';
        var chr2 = '';
        var chr3 = '';
        var i = 0;
        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
        input = input.replace(/[^A-Za-z0-9+/=]/g, '');
        while (i < input.length) {
            enc1 = this.keyStr.indexOf(input.charAt(i++));
            enc2 = this.keyStr.indexOf(input.charAt(i++));
            enc3 = this.keyStr.indexOf(input.charAt(i++));
            enc4 = this.keyStr.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            output = output + String.fromCharCode(chr1);
            if (enc3 !== 64) {
                output = output + String.fromCharCode(chr2);
            }
            if (enc4 !== 64) {
                output = output + String.fromCharCode(chr3);
            }
            chr1 = chr2 = chr3 = '';
            enc1 = enc2 = enc3 = enc4 = '';
        }
        return output;
    };
    JhiBase64Service.ɵprov = ɵɵdefineInjectable({ factory: function JhiBase64Service_Factory() { return new JhiBase64Service(); }, token: JhiBase64Service, providedIn: "root" });
JhiBase64Service.ɵfac = function JhiBase64Service_Factory(t) { return new (t || JhiBase64Service)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiBase64Service, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return JhiBase64Service;
}());

var JhiResolvePagingParams = /** @class */ (function () {
    function JhiResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    JhiResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var defaultSort = route.data['defaultSort'] ? route.data['defaultSort'] : 'id,asc';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : defaultSort;
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    JhiResolvePagingParams.ctorParameters = function () { return [
        { type: JhiPaginationUtil }
    ]; };
    JhiResolvePagingParams.ɵprov = ɵɵdefineInjectable({ factory: function JhiResolvePagingParams_Factory() { return new JhiResolvePagingParams(ɵɵinject(JhiPaginationUtil)); }, token: JhiResolvePagingParams, providedIn: "root" });
JhiResolvePagingParams.ɵfac = function JhiResolvePagingParams_Factory(t) { return new (t || JhiResolvePagingParams)(ɵngcc0.ɵɵinject(JhiPaginationUtil)); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JhiResolvePagingParams, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: JhiPaginationUtil }]; }, null); })();
    return JhiResolvePagingParams;
}());

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/*
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { JhiAlertService, JhiBase64Service, JhiBooleanComponent, JhiCapitalizePipe, JhiConfigService, JhiDataUtils, JhiDateUtils, JhiEventManager, JhiEventWithContent, JhiFilterPipe, JhiItemCountComponent, JhiKeysPipe, JhiLanguageService, JhiMaxValidatorDirective, JhiMaxbytesValidatorDirective, JhiMinValidatorDirective, JhiMinbytesValidatorDirective, JhiMissingTranslationHandler, JhiModuleConfig, JhiOrderByPipe, JhiPaginationUtil, JhiParseLinks, JhiPureFilterPipe, JhiResolvePagingParams, JhiSortByDirective, JhiSortDirective, JhiTranslateDirective, JhiTruncateCharactersPipe, JhiTruncateWordsPipe, NgJhipsterModule, missingTranslationHandler, translatePartialLoader, JHI_PIPES as ɵa, JHI_DIRECTIVES as ɵb, JHI_COMPONENTS as ɵc, JhiJvmMemoryComponent as ɵd, JhiJvmThreadsComponent as ɵe, JhiMetricsHttpRequestComponent as ɵf, JhiMetricsEndpointsRequestsComponent as ɵg, JhiMetricsCacheComponent as ɵh, JhiMetricsDatasourceComponent as ɵi, JhiMetricsSystemComponent as ɵj, JhiMetricsGarbageCollectorComponent as ɵk, JhiThreadModalComponent as ɵl };

//# sourceMappingURL=ng-jhipster.js.map